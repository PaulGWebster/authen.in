{"version":5,"vars":[{"containerName":"","line":1,"name":"strict","kind":2},{"name":"warnings","kind":2,"containerName":"","line":2},{"definition":1,"line":4,"kind":2,"name":"Path::Tiny"},{"kind":13,"name":"$VERSION","containerName":"Path::Tiny","definition":"our","line":7},{"name":"Config","kind":2,"containerName":"","line":10},{"line":11,"containerName":"","kind":2,"name":"Exporter"},{"kind":2,"name":"Spec","line":12,"containerName":"File"},{"line":13,"containerName":"","kind":2,"name":"Carp"},{"name":"@EXPORT","kind":13,"line":15,"definition":"our","containerName":"Path::Tiny"},{"containerName":"Path::Tiny","definition":"our","line":16,"name":"@EXPORT_OK","kind":13},{"name":"PATH","kind":14,"line":19,"definition":1,"containerName":"Path::Tiny"},{"line":20,"name":"CANON","kind":12},{"name":"VOL","kind":12,"line":21},{"name":"DIR","kind":12,"line":22},{"line":23,"name":"FILE","kind":12},{"line":24,"kind":12,"name":"TEMP"},{"name":"IS_WIN32","kind":12,"line":25},{"line":28,"containerName":"","kind":2,"name":"overload"},{"name":"bool","kind":12,"line":30},{"line":31,"kind":12,"name":"fallback"},{"containerName":"Path::Tiny","definition":"sub","line":35,"children":[],"range":{"end":{"character":9999,"line":35},"start":{"line":35,"character":0}},"name":"THAW","kind":12},{"line":35,"kind":12,"name":"path"},{"name":"warnings","kind":12,"line":36},{"line":36,"name":"stringify","kind":12},{"localvar":"my","kind":13,"name":"$HAS_UU","containerName":null,"definition":"my","line":38},{"line":40,"containerName":"Path::Tiny","definition":"sub","kind":12,"name":"_check_UU","children":[{"line":41,"containerName":"_check_UU","kind":13,"name":"$SIG"},{"kind":12,"name":"VERSION","containerName":"_check_UU","line":44}],"range":{"end":{"character":9999,"line":47},"start":{"line":40,"character":0}}},{"name":"__DIE__","kind":12,"line":41},{"line":43,"containerName":"UTF8","name":"Unicode","kind":12},{"name":"Unicode","kind":12,"containerName":"UTF8","line":44},{"definition":"my","containerName":null,"line":49,"name":"$HAS_PU","kind":13,"localvar":"my"},{"line":51,"containerName":"Path::Tiny","definition":"sub","kind":12,"name":"_check_PU","children":[{"line":52,"containerName":"_check_PU","kind":13,"name":"$SIG"},{"kind":12,"name":"VERSION","containerName":"_check_PU","line":58}],"range":{"start":{"line":51,"character":0},"end":{"character":9999,"line":61}}},{"kind":12,"name":"__DIE__","line":52},{"containerName":"utf8_strict","line":57,"kind":12,"name":"PerlIO"},{"line":58,"containerName":"utf8_strict","name":"PerlIO","kind":12},{"localvar":"my","name":"$HAS_FLOCK","kind":13,"containerName":null,"definition":"my","line":63},{"name":"%Config","kind":13,"line":63,"containerName":null},{"line":63,"kind":12,"name":"d_flock"},{"kind":13,"name":"%Config","containerName":null,"line":63},{"line":63,"name":"d_fcntl_can_lock","kind":12},{"line":63,"containerName":null,"kind":13,"name":"%Config"},{"kind":12,"name":"d_lockf","line":63},{"containerName":null,"definition":"my","line":66,"localvar":"my","name":"$SLASH","kind":13},{"localvar":"my","name":"$NOTSLASH","kind":13,"containerName":null,"definition":"my","line":67},{"containerName":null,"definition":"my","line":68,"localvar":"my","kind":13,"name":"$DRV_VOL"},{"localvar":"my","kind":13,"name":"$UNC_VOL","line":69,"containerName":null,"definition":"my"},{"name":"$WIN32_ROOT","kind":13,"localvar":"my","line":70,"definition":"my","containerName":null},{"kind":12,"children":[{"containerName":"_win32_vol","definition":"my","line":73,"localvar":"my","kind":13,"name":"$path"},{"name":"$drv","kind":13,"containerName":"_win32_vol","line":73},{"kind":13,"name":"$dcwd","localvar":"my","line":75,"definition":"my","containerName":"_win32_vol"},{"kind":13,"name":"$drv","containerName":"_win32_vol","line":75},{"line":78,"containerName":"_win32_vol","name":"$dcwd","kind":13},{"kind":13,"name":"$dcwd","containerName":"_win32_vol","line":78},{"containerName":"_win32_vol","line":78,"name":"$dcwd","kind":13},{"name":"$dcwd","kind":13,"containerName":"_win32_vol","line":80},{"kind":13,"name":"$path","containerName":"_win32_vol","line":82},{"kind":13,"name":"$path","containerName":"_win32_vol","line":83}],"name":"_win32_vol","signature":{"parameters":[{"label":"$path"},{"label":"$drv"}],"documentation":"","label":"_win32_vol($path,$drv)"},"range":{"end":{"line":84,"character":9999},"start":{"character":0,"line":72}},"detail":"($path,$drv)","line":72,"definition":"sub","containerName":"Path::Tiny"},{"kind":12,"name":"Cwd","containerName":"getdcwd","line":75},{"containerName":"Path::Tiny","definition":"sub","line":88,"children":[],"range":{"start":{"line":88,"character":0},"end":{"line":90,"character":9999}},"name":"_is_root","kind":12},{"line":89,"kind":12,"name":"IS_WIN32"},{"line":93,"kind":12,"name":"IS_WIN32"},{"localvar":"my","name":"%MODEBITS","kind":13,"line":97,"containerName":null,"definition":"my"},{"line":97,"name":"om","kind":12},{"line":97,"name":"gm","kind":12},{"line":97,"name":"um","kind":12},{"line":98,"definition":"my","containerName":null,"name":"$m","kind":13,"localvar":"my"},{"line":98,"containerName":null,"name":"%MODEBITS","kind":13},{"name":"$m","kind":13,"containerName":null,"line":98},{"kind":12,"children":[{"line":101,"containerName":"_symbolic_chmod","definition":"my","localvar":"my","kind":13,"name":"$mode"},{"name":"$symbolic","kind":13,"line":101,"containerName":"_symbolic_chmod"},{"name":"$clause","kind":13,"localvar":"my","definition":"my","containerName":"_symbolic_chmod","line":102},{"kind":13,"name":"$symbolic","containerName":"_symbolic_chmod","line":102},{"containerName":"_symbolic_chmod","line":103,"name":"$clause","kind":13},{"localvar":"my","name":"$who","kind":13,"line":104,"containerName":"_symbolic_chmod","definition":"my"},{"containerName":"_symbolic_chmod","line":104,"kind":13,"name":"$action"},{"name":"$perms","kind":13,"containerName":"_symbolic_chmod","line":104},{"containerName":"_symbolic_chmod","line":105,"name":"$who","kind":13},{"line":106,"definition":"my","containerName":"_symbolic_chmod","kind":13,"name":"$w","localvar":"my"},{"line":106,"containerName":"_symbolic_chmod","name":"$who","kind":13},{"line":107,"definition":"my","containerName":"_symbolic_chmod","kind":13,"name":"$p","localvar":"my"},{"line":108,"containerName":"_symbolic_chmod","name":"$p","kind":13},{"containerName":"_symbolic_chmod","line":108,"name":"$MODEBITS","kind":13},{"kind":13,"name":"$perms","line":108,"containerName":"_symbolic_chmod"},{"kind":13,"name":"$action","containerName":"_symbolic_chmod","line":109},{"name":"$mode","kind":13,"line":110,"containerName":"_symbolic_chmod"},{"containerName":"_symbolic_chmod","line":110,"name":"$mode","kind":13},{"name":"$MODEBITS","kind":13,"containerName":"_symbolic_chmod","line":110},{"name":"$p","kind":13,"containerName":"_symbolic_chmod","line":110},{"containerName":"_symbolic_chmod","line":113,"kind":13,"name":"$mode"},{"kind":13,"name":"$action","containerName":"_symbolic_chmod","line":113},{"kind":13,"name":"$mode","containerName":"_symbolic_chmod","line":113},{"containerName":"_symbolic_chmod","line":113,"kind":13,"name":"$p"},{"line":113,"containerName":"_symbolic_chmod","kind":13,"name":"$mode"},{"containerName":"_symbolic_chmod","line":113,"name":"$p","kind":13},{"containerName":"_symbolic_chmod","line":121,"kind":13,"name":"$mode"}],"line":100,"definition":"sub","containerName":"Path::Tiny","name":"_symbolic_chmod","signature":{"documentation":"","label":"_symbolic_chmod($mode,$symbolic)","parameters":[{"label":"$mode"},{"label":"$symbolic"}]},"range":{"start":{"line":100,"character":0},"end":{"line":122,"character":9999}},"detail":"($mode,$symbolic)"},{"name":"Carp","kind":12,"line":118,"containerName":"croak"},{"line":133,"definition":"my","containerName":null,"name":"$WARNED_NO_FLOCK","kind":13,"localvar":"my"},{"line":133,"containerName":"warnings","name":"register","kind":2},{"children":[{"kind":13,"name":"$self","localvar":"my","definition":"my","containerName":"_throw","line":136},{"line":136,"containerName":"_throw","name":"$function","kind":13},{"kind":13,"name":"$file","line":136,"containerName":"_throw"},{"containerName":"_throw","line":136,"name":"$msg","kind":13},{"name":"$function","kind":13,"line":137,"containerName":"_throw"},{"name":"$WARNED_NO_FLOCK","kind":13,"containerName":"_throw","line":141},{"containerName":"_throw","line":143,"kind":13,"name":"$WARNED_NO_FLOCK"},{"line":147,"containerName":"_throw","name":"$msg","kind":13},{"name":"$msg","kind":13,"line":147,"containerName":"_throw"},{"line":148,"containerName":"_throw","name":"throw","kind":12},{"containerName":"_throw","line":148,"kind":13,"name":"$function"},{"line":148,"containerName":"_throw","name":"$file","kind":13},{"name":"$file","kind":13,"line":148,"containerName":"_throw"},{"name":"$self","kind":13,"line":148,"containerName":"_throw"},{"name":"$msg","kind":13,"line":149,"containerName":"_throw"}],"kind":12,"range":{"end":{"line":152,"character":9999},"start":{"character":0,"line":135}},"detail":"($self,$function,$file,$msg)","name":"_throw","signature":{"parameters":[{"label":"$self"},{"label":"$function"},{"label":"$file"},{"label":"$msg"}],"label":"_throw($self,$function,$file,$msg)","documentation":""},"definition":"sub","containerName":"Path::Tiny","line":135},{"name":"warnings","kind":12,"containerName":"fatal_enabled","line":139},{"containerName":"warn","line":142,"name":"warnings","kind":12},{"line":142,"name":"flock","kind":12},{"kind":12,"name":"Path","containerName":"Tiny::Error","line":148},{"line":148,"kind":12,"name":"PATH"},{"name":"_get_args","signature":{"parameters":[{"label":"$raw"},{"label":"@valid"}],"label":"_get_args($raw,@valid)","documentation":" cheapo option validation"},"range":{"end":{"character":9999,"line":172},"start":{"line":155,"character":0}},"detail":"($raw,@valid)","line":155,"definition":"sub","containerName":"Path::Tiny","kind":12,"children":[{"localvar":"my","name":"$raw","kind":13,"containerName":"_get_args","definition":"my","line":156},{"containerName":"_get_args","line":156,"name":"@valid","kind":13},{"name":"$raw","kind":13,"line":157,"containerName":"_get_args"},{"kind":13,"name":"$raw","containerName":"_get_args","line":157},{"line":158,"containerName":"_get_args","definition":"my","localvar":"my","kind":13,"name":"$called_as"},{"kind":13,"name":"$called_as","line":159,"containerName":"_get_args"},{"localvar":"my","name":"$cooked","kind":13,"containerName":"_get_args","definition":"my","line":162},{"localvar":"my","name":"$k","kind":13,"line":163,"containerName":"_get_args","definition":"my"},{"containerName":"_get_args","line":163,"name":"@valid","kind":13},{"line":164,"containerName":"_get_args","kind":13,"name":"$cooked"},{"containerName":"_get_args","line":164,"name":"$k","kind":13},{"line":164,"containerName":"_get_args","kind":13,"name":"$raw"},{"name":"$k","kind":13,"containerName":"_get_args","line":164},{"kind":13,"name":"$raw","containerName":"_get_args","line":164},{"containerName":"_get_args","line":164,"name":"$k","kind":13},{"name":"$raw","kind":13,"containerName":"_get_args","line":166},{"containerName":"_get_args","definition":"my","line":167,"localvar":"my","kind":13,"name":"$called_as"},{"line":168,"containerName":"_get_args","kind":13,"name":"$called_as"},{"containerName":"_get_args","line":169,"name":"$raw","kind":13},{"name":"$cooked","kind":13,"containerName":"_get_args","line":171}]},{"containerName":"croak","line":160,"kind":12,"name":"Carp"},{"line":169,"containerName":"croak","name":"Carp","kind":12},{"range":{"start":{"character":0,"line":221},"end":{"line":249,"character":9999}},"children":[{"localvar":"my","name":"$path","kind":13,"line":222,"containerName":"path","definition":"my"},{"containerName":"path","line":224,"name":"$path","kind":13},{"name":"$path","kind":13,"containerName":"path","line":227},{"name":"$path","kind":13,"line":227,"containerName":"path"},{"kind":13,"name":"$path","containerName":"path","line":228},{"containerName":"path","line":232,"name":"$path","kind":13},{"kind":13,"name":"$tilde","localvar":"my","definition":"my","containerName":"path","line":235},{"containerName":"path","line":235,"kind":13,"name":"$path"},{"containerName":"path","line":236,"kind":13,"name":"$tilde"},{"localvar":"my","name":"$escaped","kind":13,"line":238,"containerName":"path","definition":"my"},{"containerName":"path","line":238,"name":"$tilde","kind":13},{"line":240,"definition":"my","containerName":"path","name":"$homedir","kind":13,"localvar":"my"},{"name":"$escaped","kind":13,"line":240,"containerName":"path"},{"name":"$homedir","kind":13,"line":241,"containerName":"path"},{"line":241,"containerName":"path","name":"$File","kind":13},{"kind":13,"name":"$homedir","line":242,"containerName":"path"},{"containerName":"path","line":243,"kind":13,"name":"$path"},{"containerName":"path","line":247,"name":"$path","kind":13}],"kind":12,"name":"path","definition":"sub","containerName":"Path::Tiny","line":221},{"name":"Carp","kind":12,"containerName":"croak","line":223},{"line":227,"name":"TEMP","kind":12},{"name":"File","kind":12,"line":239,"containerName":"Glob"},{"line":240,"containerName":"Glob::bsd_glob","name":"File","kind":12},{"kind":12,"name":"Glob","containerName":"ERROR","line":241},{"line":242,"kind":12,"name":"IS_WIN32"},{"name":"_pathify","kind":12,"line":248},{"line":252,"containerName":"Path::Tiny","definition":"sub","kind":12,"name":"_path","children":[{"line":253,"definition":"my","containerName":"_path","name":"$path","kind":13,"localvar":"my"},{"containerName":"_path","line":255,"name":"$path","kind":13},{"containerName":"_path","line":258,"kind":13,"name":"$path"},{"name":"$path","kind":13,"line":258,"containerName":"_path"},{"containerName":"_path","line":259,"kind":13,"name":"$path"},{"name":"$path","kind":13,"containerName":"_path","line":263},{"line":265,"containerName":"_path","name":"$path","kind":13}],"range":{"end":{"line":267,"character":9999},"start":{"character":0,"line":252}}},{"kind":12,"name":"Carp","line":254,"containerName":"croak"},{"kind":12,"name":"TEMP","line":258},{"line":266,"kind":12,"name":"_pathify"},{"kind":12,"name":"_pathify","children":[{"line":272,"containerName":"_pathify","definition":"my","localvar":"my","name":"$path","kind":13},{"line":276,"containerName":"_pathify","kind":13,"name":"$path"},{"name":"$path","kind":13,"containerName":"_pathify","line":276},{"line":276,"containerName":"_pathify","kind":13,"name":"$path"},{"kind":13,"name":"$path","line":277,"containerName":"_pathify"},{"containerName":"_pathify","line":277,"kind":13,"name":"$path"},{"line":282,"containerName":"_pathify","kind":13,"name":"$path"},{"name":"$path","kind":13,"line":282,"containerName":"_pathify"},{"name":"$cpath","kind":13,"localvar":"my","line":287,"definition":"my","containerName":"_pathify"},{"line":287,"containerName":"_pathify","name":"$path","kind":13},{"name":"canonpath","kind":12,"line":287,"containerName":"_pathify"},{"kind":13,"name":"$path","line":287,"containerName":"_pathify"},{"containerName":"_pathify","line":288,"name":"$path","kind":13},{"containerName":"_pathify","line":289,"name":"$path","kind":13},{"containerName":"_pathify","line":289,"name":"$path","kind":13},{"containerName":"_pathify","line":290,"kind":13,"name":"$path"},{"line":290,"containerName":"_pathify","name":"$path","kind":13},{"name":"$path","kind":13,"containerName":"_pathify","line":293},{"line":294,"containerName":"_pathify","name":"$path","kind":13},{"containerName":"_pathify","line":297,"kind":13,"name":"$path"},{"name":"$path","kind":13,"line":300,"containerName":"_pathify"},{"name":"$cpath","kind":13,"line":300,"containerName":"_pathify"}],"range":{"start":{"line":271,"character":0},"end":{"line":301,"character":9999}},"line":271,"containerName":"Path::Tiny","definition":"sub"},{"line":275,"name":"IS_WIN32","kind":12},{"kind":12,"name":"File","containerName":"Spec","line":287},{"line":288,"kind":12,"name":"IS_WIN32"},{"kind":12,"name":"IS_WIN32","line":290},{"range":{"end":{"character":9999,"line":314},"start":{"line":314,"character":0}},"children":[],"name":"new","kind":12,"definition":"sub","containerName":"Path::Tiny","line":314},{"containerName":"Path::Tiny","definition":"sub","line":331,"children":[],"range":{"start":{"line":331,"character":0},"end":{"line":334,"character":9999}},"name":"cwd","kind":12},{"name":"Cwd","kind":12,"containerName":"getcwd","line":333},{"line":351,"containerName":"Path::Tiny","definition":"sub","kind":12,"name":"rootdir","children":[{"kind":12,"name":"rootdir","line":351,"containerName":"rootdir"}],"range":{"end":{"character":9999,"line":351},"start":{"character":0,"line":351}}},{"kind":12,"name":"File","containerName":"Spec","line":351},{"containerName":"Path::Tiny","definition":"sub","line":426,"children":[{"definition":"my","containerName":"tempfile","line":427,"name":"$opts","kind":13,"localvar":"my"},{"containerName":"tempfile","line":427,"name":"$maybe_template","kind":13},{"name":"$args","kind":13,"containerName":"tempfile","line":427},{"name":"$args","kind":13,"containerName":"tempfile","line":431},{"line":431,"containerName":"tempfile","kind":13,"name":"$maybe_template"},{"line":431,"containerName":"tempfile","kind":13,"name":"$maybe_template"},{"localvar":"my","kind":13,"name":"$temp","containerName":"tempfile","definition":"my","line":434},{"line":434,"containerName":"tempfile","name":"new","kind":12},{"line":434,"containerName":"tempfile","name":"$args","kind":13},{"name":"$temp","kind":13,"line":435,"containerName":"tempfile"},{"kind":13,"name":"$self","localvar":"my","definition":"my","containerName":"tempfile","line":436},{"line":436,"containerName":"tempfile","name":"$opts","kind":13},{"name":"$temp","kind":13,"line":436,"containerName":"tempfile"},{"containerName":"tempfile","line":436,"kind":12,"name":"realpath"},{"kind":13,"name":"$temp","line":436,"containerName":"tempfile"},{"line":436,"containerName":"tempfile","name":"absolute","kind":12},{"name":"$self","kind":13,"containerName":"tempfile","line":437},{"containerName":"tempfile","line":437,"kind":13,"name":"$temp"},{"line":438,"containerName":"tempfile","name":"$self","kind":13}],"range":{"start":{"line":426,"character":0},"end":{"character":9999,"line":439}},"kind":12,"name":"tempfile"},{"line":428,"name":"_parse_file_temp_args","kind":12},{"line":428,"name":"tempfile","kind":12},{"name":"TEMPLATE","kind":12,"line":431},{"kind":12,"name":"File","containerName":"Temp","line":433},{"name":"File","kind":12,"containerName":"Temp","line":434},{"kind":12,"name":"TMPDIR","line":434},{"kind":12,"name":"realpath","line":436},{"line":437,"kind":12,"name":"TEMP"},{"range":{"start":{"line":441,"character":0},"end":{"character":9999,"line":454}},"children":[{"containerName":"tempdir","definition":"my","line":442,"localvar":"my","kind":13,"name":"$opts"},{"name":"$maybe_template","kind":13,"line":442,"containerName":"tempdir"},{"line":442,"containerName":"tempdir","kind":13,"name":"$args"},{"localvar":"my","name":"$temp","kind":13,"containerName":"tempdir","definition":"my","line":446},{"line":446,"containerName":"tempdir","name":"newdir","kind":12},{"kind":13,"name":"$maybe_template","containerName":"tempdir","line":446},{"line":446,"containerName":"tempdir","kind":13,"name":"$args"},{"line":447,"containerName":"tempdir","definition":"my","localvar":"my","name":"$self","kind":13},{"containerName":"tempdir","line":447,"kind":13,"name":"$opts"},{"name":"$temp","kind":13,"line":447,"containerName":"tempdir"},{"kind":12,"name":"realpath","line":447,"containerName":"tempdir"},{"kind":13,"name":"$temp","line":447,"containerName":"tempdir"},{"line":447,"containerName":"tempdir","name":"absolute","kind":12},{"name":"$self","kind":13,"containerName":"tempdir","line":448},{"line":448,"containerName":"tempdir","kind":13,"name":"$temp"},{"name":"$temp","kind":13,"containerName":"tempdir","line":452},{"line":452,"containerName":"tempdir","name":"$self","kind":13},{"name":"$self","kind":13,"containerName":"tempdir","line":453}],"name":"tempdir","kind":12,"definition":"sub","containerName":"Path::Tiny","line":441},{"line":443,"kind":12,"name":"_parse_file_temp_args"},{"line":443,"kind":12,"name":"tempdir"},{"kind":12,"name":"File","containerName":"Temp","line":445},{"containerName":"Temp","line":446,"name":"File","kind":12},{"line":446,"name":"TMPDIR","kind":12},{"line":447,"name":"realpath","kind":12},{"line":448,"name":"TEMP","kind":12},{"name":"REALNAME","kind":12,"line":452},{"line":452,"name":"CANON","kind":12},{"line":452,"name":"IS_WIN32","kind":12},{"name":"_parse_file_temp_args","kind":12,"range":{"end":{"line":480,"character":9999},"start":{"character":0,"line":457}},"children":[{"containerName":"_parse_file_temp_args","definition":"my","line":458,"localvar":"my","name":"$called_as","kind":13},{"line":460,"containerName":"_parse_file_temp_args","kind":12,"name":"isa"},{"containerName":"_parse_file_temp_args","definition":"my","line":461,"localvar":"my","kind":13,"name":"$dir"},{"name":"$dir","kind":13,"containerName":"_parse_file_temp_args","line":462},{"line":462,"containerName":"_parse_file_temp_args","name":"is_dir","kind":12},{"line":463,"containerName":"_parse_file_temp_args","name":"$dir","kind":13},{"line":463,"containerName":"_parse_file_temp_args","name":"_throw","kind":12},{"name":"$called_as","kind":13,"containerName":"_parse_file_temp_args","line":463},{"containerName":"_parse_file_temp_args","line":463,"name":"$dir","kind":13},{"containerName":"_parse_file_temp_args","line":465,"name":"$dir","kind":13},{"line":465,"containerName":"_parse_file_temp_args","kind":12,"name":"stringify"},{"definition":"my","containerName":"_parse_file_temp_args","line":467,"kind":13,"name":"$opts","localvar":"my"},{"kind":13,"name":"$opts","containerName":"_parse_file_temp_args","line":468},{"kind":13,"name":"$opts","containerName":"_parse_file_temp_args","line":468},{"localvar":"my","name":"$leading_template","kind":13,"containerName":"_parse_file_temp_args","definition":"my","line":470},{"definition":"my","containerName":"_parse_file_temp_args","line":471,"name":"%args","kind":13,"localvar":"my"},{"line":472,"containerName":"_parse_file_temp_args","kind":13,"name":"%args"},{"containerName":"_parse_file_temp_args","line":472,"name":"$args","kind":13},{"containerName":"_parse_file_temp_args","line":472,"name":"%args","kind":13},{"containerName":"_parse_file_temp_args","definition":"my","line":473,"localvar":"my","kind":13,"name":"@template"},{"name":"$args","kind":13,"containerName":"_parse_file_temp_args","line":474},{"line":474,"containerName":"_parse_file_temp_args","name":"$args","kind":13},{"containerName":"_parse_file_temp_args","line":475,"kind":13,"name":"$leading_template"},{"name":"$leading_template","kind":13,"line":476,"containerName":"_parse_file_temp_args"},{"name":"$opts","kind":13,"containerName":"_parse_file_temp_args","line":479},{"containerName":"_parse_file_temp_args","line":479,"kind":13,"name":"@template"},{"line":479,"containerName":"_parse_file_temp_args","kind":13,"name":"%args"}],"line":457,"definition":"sub","containerName":"Path::Tiny"},{"line":459,"kind":12,"name":"shift"},{"name":"DIR","kind":12,"line":465},{"kind":12,"name":"TEMPLATE","line":474},{"kind":12,"name":"TEMPLATE","line":474},{"line":486,"containerName":"Path::Tiny","definition":"sub","signature":{"parameters":[{"label":"$self"}],"label":"_splitpath($self)","documentation":" Private methods"},"name":"_splitpath","detail":"($self)","range":{"end":{"line":488,"character":9999},"start":{"line":486,"character":0}},"kind":12,"children":[{"containerName":"_splitpath","definition":"my","line":487,"localvar":"my","name":"$self","kind":13},{"kind":13,"name":"$self","line":488,"containerName":"_splitpath"}]},{"line":488,"kind":12,"name":"VOL"},{"line":488,"kind":12,"name":"DIR"},{"line":488,"kind":12,"name":"FILE"},{"containerName":"Spec","line":488,"name":"File","kind":12},{"containerName":"Path::Tiny","line":488,"name":"splitpath","kind":12},{"name":"@self","kind":13,"line":488,"containerName":null},{"kind":12,"name":"PATH","line":488},{"kind":12,"children":[{"localvar":"my","name":"$self","kind":13,"line":492,"containerName":"_resolve_symlinks","definition":"my"},{"localvar":"my","name":"$new","kind":13,"containerName":"_resolve_symlinks","definition":"my","line":493},{"containerName":"_resolve_symlinks","line":493,"kind":13,"name":"$self"},{"localvar":"my","kind":13,"name":"$count","line":494,"containerName":"_resolve_symlinks","definition":"my"},{"line":494,"containerName":"_resolve_symlinks","name":"%seen","kind":13},{"containerName":"_resolve_symlinks","line":495,"name":"$new","kind":13},{"kind":13,"name":"$seen","containerName":"_resolve_symlinks","line":496},{"containerName":"_resolve_symlinks","line":496,"name":"$new","kind":13},{"name":"$self","kind":13,"line":497,"containerName":"_resolve_symlinks"},{"containerName":"_resolve_symlinks","line":497,"name":"_throw","kind":12},{"containerName":"_resolve_symlinks","line":497,"name":"$self","kind":13},{"name":"$count","kind":13,"line":499,"containerName":"_resolve_symlinks"},{"line":500,"containerName":"_resolve_symlinks","kind":13,"name":"$self"},{"containerName":"_resolve_symlinks","line":500,"name":"_throw","kind":12},{"containerName":"_resolve_symlinks","line":500,"kind":13,"name":"$self"},{"definition":"my","containerName":"_resolve_symlinks","line":502,"name":"$resolved","kind":13,"localvar":"my"},{"name":"$new","kind":13,"containerName":"_resolve_symlinks","line":502},{"name":"$new","kind":13,"containerName":"_resolve_symlinks","line":503},{"name":"_throw","kind":12,"line":503,"containerName":"_resolve_symlinks"},{"line":503,"containerName":"_resolve_symlinks","name":"$new","kind":13},{"kind":13,"name":"$resolved","line":503,"containerName":"_resolve_symlinks"},{"line":504,"containerName":"_resolve_symlinks","name":"$resolved","kind":13},{"kind":13,"name":"$resolved","line":504,"containerName":"_resolve_symlinks"},{"line":505,"containerName":"_resolve_symlinks","kind":13,"name":"$new"},{"kind":13,"name":"$resolved","containerName":"_resolve_symlinks","line":505},{"line":505,"containerName":"_resolve_symlinks","name":"is_absolute","kind":12},{"name":"$resolved","kind":13,"containerName":"_resolve_symlinks","line":505},{"containerName":"_resolve_symlinks","line":505,"kind":13,"name":"$new"},{"name":"sibling","kind":12,"line":505,"containerName":"_resolve_symlinks"},{"name":"$resolved","kind":13,"containerName":"_resolve_symlinks","line":505},{"line":507,"containerName":"_resolve_symlinks","kind":13,"name":"$new"}],"signature":{"parameters":[{"label":"$self"}],"label":"_resolve_symlinks($self)","documentation":""},"name":"_resolve_symlinks","detail":"($self)","range":{"end":{"character":9999,"line":508},"start":{"line":491,"character":0}},"line":491,"containerName":"Path::Tiny","definition":"sub"},{"name":"PATH","kind":12,"line":495},{"line":496,"name":"PATH","kind":12},{"line":497,"name":"PATH","kind":12},{"line":500,"kind":12,"name":"PATH"},{"name":"PATH","kind":12,"line":502},{"name":"PATH","kind":12,"line":503},{"line":510,"containerName":"Path::Tiny","definition":"sub","signature":{"documentation":"","label":"_replacment_path($self)","parameters":[{"label":"$self"}]},"name":"_replacment_path","detail":"($self)","range":{"start":{"line":510,"character":0},"end":{"character":9999,"line":523}},"kind":12,"children":[{"kind":13,"name":"$self","localvar":"my","definition":"my","containerName":"_replacment_path","line":511},{"line":513,"definition":"my","containerName":"_replacment_path","name":"$unique_suffix","kind":13,"localvar":"my"},{"localvar":"my","name":"$temp","kind":13,"line":514,"containerName":"_replacment_path","definition":"my"},{"containerName":"_replacment_path","line":514,"kind":13,"name":"$self"},{"name":"$unique_suffix","kind":13,"line":514,"containerName":"_replacment_path"},{"name":"$temp","kind":13,"line":518,"containerName":"_replacment_path"},{"line":518,"containerName":"_replacment_path","kind":12,"name":"basename"},{"containerName":"_replacment_path","line":519,"name":"$temp","kind":13},{"line":519,"containerName":"_replacment_path","name":"$self","kind":13},{"name":"sibling","kind":12,"line":519,"containerName":"_replacment_path"},{"name":"$unique_suffix","kind":13,"containerName":"_replacment_path","line":519},{"line":522,"containerName":"_replacment_path","kind":13,"name":"$temp"}]},{"detail":"($self,$base)","range":{"end":{"line":578,"character":9999},"start":{"character":0,"line":550}},"signature":{"parameters":[{"label":"$self"},{"label":"$base"}],"documentation":" Public methods\npod =method absolute\npod\npod     $abs = path(\"foo/bar\")->absolute;\npod     $abs = path(\"foo/bar\")->absolute(\"/tmp\");\npod\npod Returns a new C<Path::Tiny> object with an absolute path (or itself if already\npod absolute).  If no argument is given, the current directory is used as the\npod absolute base path.  If an argument is given, it will be converted to an\npod absolute path (if it is not already) and used as the absolute base path.\npod\npod This will not resolve upward directories (\"foo/../bar\") unless C<canonpath>\npod in L<File::Spec> would normally do so on your platform.  If you need them\npod resolved, you must call the more expensive C<realpath> method instead.\npod\npod On Windows, an absolute path without a volume component will have it added\npod based on the current drive.\npod\npod Current API available since 0.101.\npod\npod =cut","label":"absolute($self,$base)"},"name":"absolute","containerName":"Path::Tiny","definition":"sub","line":550,"children":[{"line":551,"containerName":"absolute","definition":"my","localvar":"my","kind":13,"name":"$self"},{"name":"$base","kind":13,"containerName":"absolute","line":551},{"containerName":"absolute","line":555,"name":"$self","kind":13},{"containerName":"absolute","line":555,"name":"$self","kind":13},{"containerName":"absolute","line":555,"kind":12,"name":"volume"},{"name":"$self","kind":13,"line":557,"containerName":"absolute"},{"line":557,"containerName":"absolute","name":"is_absolute","kind":12},{"containerName":"absolute","definition":"my","line":561,"localvar":"my","name":"$drv","kind":13},{"kind":13,"name":"$drv","containerName":"absolute","line":562},{"name":"$self","kind":13,"line":562,"containerName":"absolute"},{"line":566,"containerName":"absolute","name":"$self","kind":13},{"containerName":"absolute","line":566,"name":"$self","kind":13},{"kind":12,"name":"is_absolute","containerName":"absolute","line":566},{"kind":13,"name":"$base","line":571,"containerName":"absolute"},{"kind":13,"name":"$base","containerName":"absolute","line":576},{"containerName":"absolute","line":576,"name":"$base","kind":13},{"name":"$base","kind":13,"line":577,"containerName":"absolute"},{"name":"is_absolute","kind":12,"containerName":"absolute","line":577},{"name":"$base","kind":13,"containerName":"absolute","line":577},{"name":"$base","kind":13,"containerName":"absolute","line":577},{"containerName":"absolute","line":577,"name":"absolute","kind":12}],"kind":12},{"line":554,"name":"IS_WIN32","kind":12},{"kind":12,"name":"Win32","line":561,"containerName":"GetCwd"},{"line":562,"name":"PATH","kind":12},{"name":"Cwd","kind":12,"line":571,"containerName":"getcwd"},{"name":"PATH","kind":12,"line":571},{"name":"PATH","kind":12,"line":577},{"kind":12,"children":[{"name":"$self","kind":13,"localvar":"my","definition":"my","containerName":"append","line":614},{"line":614,"containerName":"append","name":"@data","kind":13},{"definition":"my","containerName":"append","line":615,"name":"$args","kind":13,"localvar":"my"},{"line":615,"containerName":"append","name":"@data","kind":13},{"kind":13,"name":"$data","line":615,"containerName":"append"},{"containerName":"append","line":615,"name":"@data","kind":13},{"line":616,"containerName":"append","name":"$args","kind":13},{"name":"$args","kind":13,"containerName":"append","line":616},{"localvar":"my","kind":13,"name":"$binmode","containerName":"append","definition":"my","line":617},{"name":"$args","kind":13,"containerName":"append","line":617},{"line":618,"containerName":"append","name":"$binmode","kind":13},{"line":618,"containerName":"append","kind":13,"name":"$binmode"},{"line":619,"containerName":"append","definition":"my","localvar":"my","name":"$mode","kind":13},{"name":"$args","kind":13,"containerName":"append","line":619},{"localvar":"my","name":"$fh","kind":13,"containerName":"append","definition":"my","line":620},{"kind":13,"name":"$self","line":620,"containerName":"append"},{"name":"filehandle","kind":12,"containerName":"append","line":620},{"name":"$mode","kind":13,"line":620,"containerName":"append"},{"kind":13,"name":"$binmode","line":620,"containerName":"append"},{"name":"$fh","kind":13,"line":621,"containerName":"append"},{"containerName":"append","line":621,"kind":13,"name":"$_"},{"kind":13,"name":"@data","containerName":"append","line":621},{"containerName":"append","line":621,"name":"_throw","kind":12},{"kind":13,"name":"$fh","containerName":"append","line":622},{"name":"$self","kind":13,"line":622,"containerName":"append"},{"kind":12,"name":"_throw","containerName":"append","line":622}],"line":613,"definition":"sub","containerName":"Path::Tiny","name":"append","signature":{"documentation":"pod =method append, append_raw, append_utf8\npod\npod     path(\"foo.txt\")->append(@data);\npod     path(\"foo.txt\")->append(\\@data);\npod     path(\"foo.txt\")->append({binmode => \":raw\"}, @data);\npod     path(\"foo.txt\")->append_raw(@data);\npod     path(\"foo.txt\")->append_utf8(@data);\npod\npod Appends data to a file.  The file is locked with C<flock> prior to writing\npod and closed afterwards.  An optional hash reference may be used to pass\npod options.  Valid options are:\npod\npod =for :list\npod * C<binmode>: passed to C<binmode()> on the handle used for writing.\npod * C<truncate>: truncates the file after locking and before appending\npod\npod The C<truncate> option is a way to replace the contents of a file\npod B<in place>, unlike L</spew> which writes to a temporary file and then\npod replaces the original (if it exists).\npod\npod C<append_raw> is like C<append> with a C<binmode> of C<:unix> for a fast,\npod unbuffered, raw write.\npod\npod C<append_utf8> is like C<append> with an unbuffered C<binmode>\npod C<:unix:encoding(UTF-8)> (or C<:unix:utf8_strict> with\npod L<PerlIO::utf8_strict>).  If L<Unicode::UTF8> 0.58+ is installed, an\npod unbuffered, raw append will be done instead on the data encoded with\npod C<Unicode::UTF8>.\npod\npod Current API available since 0.060.\npod\npod =cut","label":"append($self,@data)","parameters":[{"label":"$self"},{"label":"@data"}]},"range":{"start":{"line":613,"character":0},"end":{"character":9999,"line":623}},"detail":"($self,@data)"},{"kind":12,"name":"binmode","line":617},{"line":619,"name":"truncate","kind":12},{"name":"locked","kind":12,"line":620},{"line":621,"kind":12,"name":"self"},{"children":[{"kind":13,"name":"$self","localvar":"my","line":626,"definition":"my","containerName":"append_raw"},{"name":"@data","kind":13,"line":626,"containerName":"append_raw"},{"containerName":"append_raw","definition":"my","line":627,"localvar":"my","name":"$args","kind":13},{"name":"@data","kind":13,"line":627,"containerName":"append_raw"},{"name":"$data","kind":13,"containerName":"append_raw","line":627},{"line":627,"containerName":"append_raw","kind":13,"name":"@data"},{"kind":13,"name":"$args","containerName":"append_raw","line":628},{"line":628,"containerName":"append_raw","kind":13,"name":"$args"},{"kind":13,"name":"$args","containerName":"append_raw","line":629},{"containerName":"append_raw","line":630,"name":"$self","kind":13},{"line":630,"containerName":"append_raw","kind":13,"name":"$args"},{"line":630,"containerName":"append_raw","kind":13,"name":"@data"}],"kind":12,"range":{"start":{"character":0,"line":625},"end":{"character":9999,"line":631}},"detail":"($self,@data)","name":"append_raw","signature":{"parameters":[{"label":"$self"},{"label":"@data"}],"label":"append_raw($self,@data)","documentation":""},"definition":"sub","containerName":"Path::Tiny","line":625},{"line":629,"name":"binmode","kind":12},{"range":{"end":{"line":649,"character":9999},"start":{"line":633,"character":0}},"detail":"($self,@data)","name":"append_utf8","signature":{"label":"append_utf8($self,@data)","documentation":"","parameters":[{"label":"$self"},{"label":"@data"}]},"definition":"sub","containerName":"Path::Tiny","line":633,"children":[{"definition":"my","containerName":"append_utf8","line":634,"kind":13,"name":"$self","localvar":"my"},{"name":"@data","kind":13,"line":634,"containerName":"append_utf8"},{"line":635,"definition":"my","containerName":"append_utf8","name":"$args","kind":13,"localvar":"my"},{"containerName":"append_utf8","line":635,"name":"@data","kind":13},{"containerName":"append_utf8","line":635,"name":"$data","kind":13},{"containerName":"append_utf8","line":635,"kind":13,"name":"@data"},{"kind":13,"name":"$args","line":636,"containerName":"append_utf8"},{"name":"$args","kind":13,"containerName":"append_utf8","line":636},{"line":637,"containerName":"append_utf8","kind":13,"name":"$HAS_UU"},{"name":"$HAS_UU","kind":13,"containerName":"append_utf8","line":637},{"line":637,"containerName":"append_utf8","name":"$HAS_UU","kind":13},{"line":638,"containerName":"append_utf8","name":"$args","kind":13},{"line":639,"containerName":"append_utf8","name":"$self","kind":13},{"line":639,"containerName":"append_utf8","kind":13,"name":"$args"},{"line":639,"containerName":"append_utf8","name":"@data","kind":13},{"line":641,"containerName":"append_utf8","kind":13,"name":"$HAS_PU"},{"line":641,"containerName":"append_utf8","kind":13,"name":"$HAS_PU"},{"name":"$HAS_PU","kind":13,"line":641,"containerName":"append_utf8"},{"line":642,"containerName":"append_utf8","kind":13,"name":"$args"},{"name":"$self","kind":13,"containerName":"append_utf8","line":643},{"containerName":"append_utf8","line":643,"kind":13,"name":"$args"},{"containerName":"append_utf8","line":643,"name":"@data","kind":13},{"kind":13,"name":"$args","containerName":"append_utf8","line":646},{"kind":13,"name":"$self","line":647,"containerName":"append_utf8"},{"kind":13,"name":"$args","containerName":"append_utf8","line":647},{"containerName":"append_utf8","line":647,"kind":13,"name":"@data"}],"kind":12},{"name":"binmode","kind":12,"line":638},{"kind":12,"name":"Unicode","containerName":"UTF8::encode_utf8","line":639},{"name":"binmode","kind":12,"line":642},{"name":"binmode","kind":12,"line":646},{"line":666,"containerName":"Path::Tiny","definition":"sub","signature":{"documentation":"pod =method assert\npod\npod     $path = path(\"foo.txt\")->assert( sub { $_->exists } );\npod\npod Returns the invocant after asserting that a code reference argument returns\npod true.  When the assertion code reference runs, it will have the invocant\npod object in the C<$_> variable.  If it returns false, an exception will be\npod thrown.  The assertion code reference may also throw its own exception.\npod\npod If no assertion is provided, the invocant is returned without error.\npod\npod Current API available since 0.062.\npod\npod =cut","label":"assert($self,$assertion)","parameters":[{"label":"$self"},{"label":"$assertion"}]},"name":"assert","detail":"($self,$assertion)","range":{"start":{"line":666,"character":0},"end":{"character":9999,"line":678}},"kind":12,"children":[{"containerName":"assert","definition":"my","line":667,"localvar":"my","name":"$self","kind":13},{"containerName":"assert","line":667,"kind":13,"name":"$assertion"},{"line":668,"containerName":"assert","kind":13,"name":"$self"},{"line":668,"containerName":"assert","kind":13,"name":"$assertion"},{"containerName":"assert","line":669,"kind":13,"name":"$assertion"},{"kind":13,"name":"$self","line":670,"containerName":"assert"},{"kind":13,"name":"$assertion","containerName":"assert","line":671},{"containerName":"assert","line":672,"name":"throw","kind":12},{"name":"$self","kind":13,"containerName":"assert","line":672},{"line":677,"containerName":"assert","name":"$self","kind":13}]},{"kind":12,"name":"Path","line":672,"containerName":"Tiny::Error"},{"name":"PATH","kind":12,"line":672},{"kind":12,"name":"Carp","line":675,"containerName":"croak"},{"children":[{"containerName":"basename","definition":"my","line":698,"localvar":"my","kind":13,"name":"$self"},{"line":698,"containerName":"basename","kind":13,"name":"@suffixes"},{"name":"$self","kind":13,"line":699,"containerName":"basename"},{"kind":12,"name":"_splitpath","line":699,"containerName":"basename"},{"containerName":"basename","line":699,"kind":13,"name":"$self"},{"definition":"my","containerName":"basename","line":700,"name":"$file","kind":13,"localvar":"my"},{"kind":13,"name":"$self","line":700,"containerName":"basename"},{"line":701,"containerName":"basename","definition":"my","localvar":"my","kind":13,"name":"$s"},{"kind":13,"name":"@suffixes","containerName":"basename","line":701},{"name":"$re","kind":13,"localvar":"my","definition":"my","containerName":"basename","line":702},{"name":"$s","kind":13,"line":702,"containerName":"basename"},{"kind":13,"name":"$file","containerName":"basename","line":703},{"containerName":"basename","line":705,"name":"$file","kind":13}],"kind":12,"detail":"($self,@suffixes)","range":{"start":{"character":0,"line":697},"end":{"line":706,"character":9999}},"signature":{"label":"basename($self,@suffixes)","documentation":"pod =method basename\npod\npod     $name = path(\"foo/bar.txt\")->basename;        # bar.txt\npod     $name = path(\"foo.txt\")->basename('.txt');    # foo\npod     $name = path(\"foo.txt\")->basename(qr/.txt/);  # foo\npod     $name = path(\"foo.txt\")->basename(@suffixes);\npod\npod Returns the file portion or last directory portion of a path.\npod\npod Given a list of suffixes as strings or regular expressions, any that match at\npod the end of the file portion or last directory portion will be removed before\npod the result is returned.\npod\npod Current API available since 0.054.\npod\npod =cut","parameters":[{"label":"$self"},{"label":"@suffixes"}]},"name":"basename","containerName":"Path::Tiny","definition":"sub","line":697},{"name":"FILE","kind":12,"line":699},{"line":700,"name":"FILE","kind":12},{"line":720,"definition":"sub","containerName":"Path::Tiny","kind":12,"name":"canonpath","range":{"start":{"line":720,"character":0},"end":{"character":9999,"line":720}},"children":[]},{"kind":12,"name":"CANON","line":720},{"containerName":"Path::Tiny","definition":"sub","line":736,"children":[{"localvar":"my","name":"$self","kind":13,"containerName":"cached_temp","definition":"my","line":737},{"line":738,"containerName":"cached_temp","kind":13,"name":"$self"},{"line":738,"containerName":"cached_temp","kind":12,"name":"_throw"},{"name":"$self","kind":13,"line":738,"containerName":"cached_temp"},{"name":"$self","kind":13,"line":739,"containerName":"cached_temp"},{"kind":13,"name":"$self","containerName":"cached_temp","line":740}],"range":{"end":{"line":741,"character":9999},"start":{"character":0,"line":736}},"kind":12,"name":"cached_temp"},{"name":"TEMP","kind":12,"line":739},{"kind":12,"name":"TEMP","line":740},{"children":[{"localvar":"my","kind":13,"name":"$self","containerName":"child","definition":"my","line":762},{"name":"@parts","kind":13,"containerName":"child","line":762},{"kind":13,"name":"$self","line":763,"containerName":"child"},{"line":763,"containerName":"child","name":"@parts","kind":13}],"kind":12,"containerName":"Path::Tiny","definition":"sub","line":761,"detail":"($self,@parts)","range":{"end":{"character":9999,"line":764},"start":{"character":0,"line":761}},"signature":{"parameters":[{"label":"$self"},{"label":"@parts"}],"label":"child($self,@parts)","documentation":"pod =method child\npod\npod     $file = path(\"/tmp\")->child(\"foo.txt\"); # \"/tmp/foo.txt\"\npod     $file = path(\"/tmp\")->child(@parts);\npod\npod Returns a new C<Path::Tiny> object relative to the original.  Works\npod like C<catfile> or C<catdir> from File::Spec, but without caring about\npod file or directories.\npod\npod B<WARNING>: because the argument could contain C<..> or refer to symlinks,\npod there is no guarantee that the new path refers to an actual descendent of\npod the original.  If this is important to you, transform parent and child with\npod L</realpath> and check them with L</subsumes>.\npod\npod Current API available since 0.001.\npod\npod =cut"},"name":"child"},{"kind":12,"name":"PATH","line":763},{"containerName":"Path::Tiny","definition":"sub","line":785,"detail":"($self,$filter)","range":{"end":{"line":803,"character":9999},"start":{"line":785,"character":0}},"signature":{"parameters":[{"label":"$self"},{"label":"$filter"}],"documentation":"pod =method children\npod\npod     @paths = path(\"/tmp\")->children;\npod     @paths = path(\"/tmp\")->children( qr/\\.txt\\z/ );\npod\npod Returns a list of C<Path::Tiny> objects for all files and directories\npod within a directory.  Excludes \".\" and \"..\" automatically.\npod\npod If an optional C<qr//> argument is provided, it only returns objects for child\npod names that match the given regular expression.  Only the base name is used\npod for matching:\npod\npod     @paths = path(\"/tmp\")->children( qr/^foo/ );\npod     # matches children like the glob foo*\npod\npod Current API available since 0.028.\npod\npod =cut","label":"children($self,$filter)"},"name":"children","children":[{"kind":13,"name":"$self","localvar":"my","definition":"my","containerName":"children","line":786},{"name":"$filter","kind":13,"line":786,"containerName":"children"},{"containerName":"children","definition":"my","line":787,"localvar":"my","name":"$dh","kind":13},{"name":"$dh","kind":13,"line":788,"containerName":"children"},{"kind":13,"name":"$self","containerName":"children","line":788},{"name":"$self","kind":13,"containerName":"children","line":788},{"name":"_throw","kind":12,"line":788,"containerName":"children"},{"containerName":"children","definition":"my","line":789,"localvar":"my","name":"@children","kind":13},{"containerName":"children","line":789,"name":"$dh","kind":13},{"line":790,"containerName":"children","name":"$dh","kind":13},{"containerName":"children","line":790,"kind":13,"name":"$self"},{"name":"_throw","kind":12,"containerName":"children","line":790},{"kind":13,"name":"$filter","line":792,"containerName":"children"},{"line":793,"containerName":"children","kind":13,"name":"@children"},{"line":793,"containerName":"children","name":"@children","kind":13},{"line":795,"containerName":"children","kind":13,"name":"$filter"},{"containerName":"children","line":795,"kind":13,"name":"$filter"},{"kind":13,"name":"@children","line":796,"containerName":"children"},{"containerName":"children","line":796,"kind":13,"name":"$filter"},{"name":"@children","kind":13,"containerName":"children","line":796},{"kind":13,"name":"$self","containerName":"children","line":802},{"kind":13,"name":"@children","containerName":"children","line":802}],"kind":12},{"kind":12,"name":"PATH","line":788},{"line":799,"containerName":"croak","kind":12,"name":"Carp"},{"line":802,"kind":12,"name":"PATH"},{"kind":12,"children":[{"name":"$self","kind":13,"localvar":"my","line":827,"definition":"my","containerName":"chmod"},{"kind":13,"name":"$new_mode","line":827,"containerName":"chmod"},{"line":829,"definition":"my","containerName":"chmod","kind":13,"name":"$mode","localvar":"my"},{"name":"$new_mode","kind":13,"containerName":"chmod","line":830},{"kind":13,"name":"$mode","containerName":"chmod","line":831},{"name":"$new_mode","kind":13,"line":831,"containerName":"chmod"},{"kind":13,"name":"$new_mode","line":831,"containerName":"chmod"},{"containerName":"chmod","line":831,"kind":13,"name":"$new_mode"},{"containerName":"chmod","line":833,"name":"$new_mode","kind":13},{"containerName":"chmod","line":834,"kind":13,"name":"$mode"},{"name":"$self","kind":13,"line":834,"containerName":"chmod"},{"kind":12,"name":"stat","line":834,"containerName":"chmod"},{"containerName":"chmod","line":834,"name":"mode","kind":12},{"containerName":"chmod","line":834,"name":"$new_mode","kind":13},{"kind":13,"name":"$mode","containerName":"chmod","line":840},{"line":840,"containerName":"chmod","name":"$self","kind":13},{"kind":13,"name":"$self","line":840,"containerName":"chmod"},{"containerName":"chmod","line":840,"kind":12,"name":"_throw"}],"line":826,"containerName":"Path::Tiny","definition":"sub","signature":{"parameters":[{"label":"$self"},{"label":"$new_mode"}],"label":"chmod($self,$new_mode)","documentation":"pod =method chmod\npod\npod     path(\"foo.txt\")->chmod(0777);\npod     path(\"foo.txt\")->chmod(\"0755\");\npod     path(\"foo.txt\")->chmod(\"go-w\");\npod     path(\"foo.txt\")->chmod(\"a=r,u+wx\");\npod\npod Sets file or directory permissions.  The argument can be a numeric mode, a\npod octal string beginning with a \"0\" or a limited subset of the symbolic mode use\npod by F</bin/chmod>.\npod\npod The symbolic mode must be a comma-delimited list of mode clauses.  Clauses must\npod match C<< qr/\\A([augo]+)([=+-])([rwx]+)\\z/ >>, which defines \"who\", \"op\" and\npod \"perms\" parameters for each clause.  Unlike F</bin/chmod>, all three parameters\npod are required for each clause, multiple ops are not allowed and permissions\npod C<stugoX> are not supported.  (See L<File::chmod> for more complex needs.)\npod\npod Current API available since 0.053.\npod\npod =cut"},"name":"chmod","detail":"($self,$new_mode)","range":{"end":{"line":843,"character":9999},"start":{"line":826,"character":0}}},{"line":837,"containerName":"croak","name":"Carp","kind":12},{"name":"CORE","kind":12,"line":840,"containerName":"chmod"},{"kind":12,"name":"PATH","line":840},{"kind":12,"children":[{"localvar":"my","kind":13,"name":"$self","containerName":"copy","definition":"my","line":859},{"name":"$dest","kind":13,"line":859,"containerName":"copy"},{"line":861,"containerName":"copy","kind":13,"name":"$self"},{"name":"$dest","kind":13,"line":861,"containerName":"copy"},{"line":864,"containerName":"copy","kind":13,"name":"$dest"},{"kind":13,"name":"$dest","line":864,"containerName":"copy"},{"name":"$self","kind":13,"line":864,"containerName":"copy"},{"name":"basename","kind":12,"line":864,"containerName":"copy"},{"line":864,"containerName":"copy","kind":13,"name":"$dest"}],"line":858,"containerName":"Path::Tiny","definition":"sub","signature":{"parameters":[{"label":"$self"},{"label":"$dest"}],"label":"copy($self,$dest)","documentation":"pod =method copy\npod\npod     path(\"/tmp/foo.txt\")->copy(\"/tmp/bar.txt\");\npod\npod Copies the current path to the given destination using L<File::Copy>'s\npod C<copy> function. Upon success, returns the C<Path::Tiny> object for the\npod newly copied file.\npod\npod Current API available since 0.070.\npod\npod =cut\n XXX do recursively for directories?"},"name":"copy","detail":"($self,$dest)","range":{"start":{"character":0,"line":858},"end":{"line":865,"character":9999}}},{"kind":12,"name":"File","containerName":"Copy","line":860},{"line":861,"containerName":"Copy::copy","name":"File","kind":12},{"line":861,"name":"PATH","kind":12},{"name":"Carp","kind":12,"containerName":"croak","line":862},{"children":[{"name":"$self","kind":13,"localvar":"my","line":886,"definition":"my","containerName":"digest"},{"containerName":"digest","line":886,"kind":13,"name":"@opts"},{"name":"$args","kind":13,"localvar":"my","line":887,"definition":"my","containerName":"digest"},{"containerName":"digest","line":887,"name":"@opts","kind":13},{"containerName":"digest","line":887,"name":"$opts","kind":13},{"name":"@opts","kind":13,"containerName":"digest","line":887},{"line":888,"containerName":"digest","name":"$args","kind":13},{"name":"$args","kind":13,"line":888,"containerName":"digest"},{"name":"@opts","kind":13,"line":889,"containerName":"digest"},{"kind":13,"name":"@opts","line":889,"containerName":"digest"},{"line":891,"definition":"my","containerName":"digest","kind":13,"name":"$digest","localvar":"my"},{"containerName":"digest","line":891,"kind":12,"name":"new"},{"containerName":"digest","line":891,"name":"@opts","kind":13},{"containerName":"digest","line":892,"name":"$args","kind":13},{"definition":"my","containerName":"digest","line":893,"kind":13,"name":"$fh","localvar":"my"},{"kind":13,"name":"$self","containerName":"digest","line":893},{"containerName":"digest","line":893,"kind":12,"name":"filehandle"},{"line":894,"definition":"my","containerName":"digest","name":"$buf","kind":13,"localvar":"my"},{"line":895,"containerName":"digest","kind":13,"name":"$fh"},{"name":"$rc","kind":13,"localvar":"my","line":896,"definition":"my","containerName":"digest"},{"line":896,"containerName":"digest","name":"$fh","kind":13},{"kind":13,"name":"$buf","line":896,"containerName":"digest"},{"line":896,"containerName":"digest","name":"$args","kind":13},{"name":"$self","kind":13,"containerName":"digest","line":897},{"kind":12,"name":"_throw","line":897,"containerName":"digest"},{"containerName":"digest","line":897,"name":"$rc","kind":13},{"name":"$digest","kind":13,"containerName":"digest","line":898},{"name":"add","kind":12,"line":898,"containerName":"digest"},{"name":"$buf","kind":13,"line":898,"containerName":"digest"},{"name":"$digest","kind":13,"line":902,"containerName":"digest"},{"kind":12,"name":"add","line":902,"containerName":"digest"},{"containerName":"digest","line":902,"kind":13,"name":"$self"},{"containerName":"digest","line":902,"kind":12,"name":"slurp_raw"},{"containerName":"digest","line":904,"name":"$digest","kind":13},{"line":904,"containerName":"digest","kind":12,"name":"hexdigest"}],"kind":12,"range":{"start":{"character":0,"line":885},"end":{"line":905,"character":9999}},"detail":"($self,@opts)","name":"digest","signature":{"documentation":"pod =method digest\npod\npod     $obj = path(\"/tmp/foo.txt\")->digest;        # SHA-256\npod     $obj = path(\"/tmp/foo.txt\")->digest(\"MD5\"); # user-selected\npod     $obj = path(\"/tmp/foo.txt\")->digest( { chunk_size => 1e6 }, \"MD5\" );\npod\npod Returns a hexadecimal digest for a file.  An optional hash reference of options may\npod be given.  The only option is C<chunk_size>.  If C<chunk_size> is given, that many\npod bytes will be read at a time.  If not provided, the entire file will be slurped\npod into memory to compute the digest.\npod\npod Any subsequent arguments are passed to the constructor for L<Digest> to select\npod an algorithm.  If no arguments are given, the default is SHA-256.\npod\npod Current API available since 0.056.\npod\npod =cut","label":"digest($self,@opts)","parameters":[{"label":"$self"},{"label":"@opts"}]},"definition":"sub","containerName":"Path::Tiny","line":885},{"line":891,"name":"Digest","kind":12},{"line":892,"name":"chunk_size","kind":12},{"line":893,"kind":12,"name":"locked"},{"line":896,"name":"chunk_size","kind":12},{"containerName":"Path::Tiny","definition":"sub","line":924,"detail":"($self)","range":{"start":{"line":924,"character":0},"end":{"line":928,"character":9999}},"signature":{"parameters":[{"label":"$self"}],"label":"dirname($self)","documentation":"pod =method dirname (deprecated)\npod\npod     $name = path(\"/tmp/foo.txt\")->dirname; # \"/tmp/\"\npod\npod Returns the directory portion you would get from calling\npod C<< File::Spec->splitpath( $path->stringify ) >> or C<\".\"> for a path without a\npod parent directory portion.  Because L<File::Spec> is inconsistent, the result\npod might or might not have a trailing slash.  Because of this, this method is\npod B<deprecated>.\npod\npod A better, more consistently approach is likely C<< $path->parent->stringify >>,\npod which will not have a trailing slash except for a root directory.\npod\npod Deprecated in 0.056.\npod\npod =cut"},"name":"dirname","children":[{"localvar":"my","kind":13,"name":"$self","line":925,"containerName":"dirname","definition":"my"},{"containerName":"dirname","line":926,"name":"$self","kind":13},{"kind":12,"name":"_splitpath","containerName":"dirname","line":926},{"kind":13,"name":"$self","containerName":"dirname","line":926},{"containerName":"dirname","line":927,"kind":13,"name":"$self"},{"containerName":"dirname","line":927,"name":"$self","kind":13}],"kind":12},{"line":926,"name":"DIR","kind":12},{"line":927,"kind":12,"name":"DIR"},{"name":"DIR","kind":12,"line":927},{"children":[{"localvar":"my","name":"$self","kind":13,"containerName":"edit","definition":"my","line":953},{"localvar":"my","kind":13,"name":"$cb","line":954,"containerName":"edit","definition":"my"},{"localvar":"my","kind":13,"name":"$args","line":955,"containerName":"edit","definition":"my"},{"name":"$cb","kind":13,"line":957,"containerName":"edit"},{"containerName":"edit","line":957,"name":"$cb","kind":13},{"line":960,"containerName":"edit","kind":13,"name":"$self"},{"kind":12,"name":"slurp","containerName":"edit","line":960},{"name":"$args","kind":13,"containerName":"edit","line":960},{"kind":13,"name":"$args","line":960,"containerName":"edit"},{"containerName":"edit","line":961,"name":"$cb","kind":13},{"name":"$self","kind":13,"line":962,"containerName":"edit"},{"name":"spew","kind":12,"line":962,"containerName":"edit"},{"name":"$args","kind":13,"line":962,"containerName":"edit"}],"range":{"start":{"character":0,"line":952},"end":{"character":9999,"line":965}},"name":"edit","kind":12,"containerName":"Path::Tiny","definition":"sub","line":952},{"containerName":"croak","line":956,"name":"Carp","kind":12},{"name":"binmode","kind":12,"line":960},{"name":"binmode","kind":12,"line":960},{"line":960,"name":"binmode","kind":12},{"kind":12,"children":[{"kind":13,"name":"$self","localvar":"my","definition":"my","containerName":"edit_utf8","line":969},{"name":"$cb","kind":13,"containerName":"edit_utf8","line":969},{"kind":13,"name":"$cb","line":971,"containerName":"edit_utf8"},{"kind":13,"name":"$cb","containerName":"edit_utf8","line":971},{"containerName":"edit_utf8","line":973,"name":"$self","kind":13},{"line":973,"containerName":"edit_utf8","kind":12,"name":"slurp_utf8"},{"kind":13,"name":"$cb","containerName":"edit_utf8","line":974},{"kind":13,"name":"$self","containerName":"edit_utf8","line":975},{"name":"spew_utf8","kind":12,"line":975,"containerName":"edit_utf8"}],"signature":{"parameters":[{"label":"$self"},{"label":"$cb"}],"label":"edit_utf8($self,$cb)","documentation":" this is done long-hand to benefit from slurp_utf8 optimizations"},"name":"edit_utf8","detail":"($self,$cb)","range":{"start":{"line":968,"character":0},"end":{"character":9999,"line":978}},"line":968,"containerName":"Path::Tiny","definition":"sub"},{"name":"Carp","kind":12,"containerName":"croak","line":970},{"containerName":"Path::Tiny","definition":"sub","line":980,"children":[],"range":{"start":{"line":980,"character":0},"end":{"line":980,"character":9999}},"kind":12,"name":"edit_raw"},{"line":980,"kind":12,"name":"binmode"},{"name":"edit_lines","kind":12,"children":[{"definition":"my","containerName":"edit_lines","line":1011,"kind":13,"name":"$self","localvar":"my"},{"kind":13,"name":"$cb","localvar":"my","definition":"my","containerName":"edit_lines","line":1012},{"localvar":"my","name":"$args","kind":13,"line":1013,"containerName":"edit_lines","definition":"my"},{"name":"$cb","kind":13,"containerName":"edit_lines","line":1015},{"name":"$cb","kind":13,"containerName":"edit_lines","line":1015},{"definition":"my","containerName":"edit_lines","line":1017,"name":"$binmode","kind":13,"localvar":"my"},{"line":1017,"containerName":"edit_lines","name":"$args","kind":13},{"containerName":"edit_lines","line":1019,"name":"$binmode","kind":13},{"containerName":"edit_lines","line":1019,"name":"$binmode","kind":13},{"localvar":"my","name":"$resolved_path","kind":13,"containerName":"edit_lines","definition":"my","line":1023},{"name":"$self","kind":13,"line":1023,"containerName":"edit_lines"},{"containerName":"edit_lines","line":1023,"kind":12,"name":"_resolve_symlinks"},{"line":1024,"containerName":"edit_lines","definition":"my","localvar":"my","kind":13,"name":"$temp"},{"line":1024,"containerName":"edit_lines","kind":13,"name":"$resolved_path"},{"containerName":"edit_lines","line":1024,"name":"_replacment_path","kind":12},{"localvar":"my","kind":13,"name":"$temp_fh","containerName":"edit_lines","definition":"my","line":1026},{"kind":13,"name":"$temp","line":1026,"containerName":"edit_lines"},{"containerName":"edit_lines","line":1026,"kind":12,"name":"filehandle"},{"containerName":"edit_lines","line":1026,"kind":13,"name":"$binmode"},{"name":"$in_fh","kind":13,"localvar":"my","definition":"my","containerName":"edit_lines","line":1027},{"line":1027,"containerName":"edit_lines","name":"$self","kind":13},{"kind":12,"name":"filehandle","containerName":"edit_lines","line":1027},{"line":1027,"containerName":"edit_lines","kind":13,"name":"$binmode"},{"kind":13,"name":"$in_fh","line":1030,"containerName":"edit_lines"},{"line":1031,"containerName":"edit_lines","kind":13,"name":"$in_fh"},{"name":"$self","kind":13,"containerName":"edit_lines","line":1031},{"kind":12,"name":"_throw","line":1031,"containerName":"edit_lines"},{"name":"$cb","kind":13,"line":1032,"containerName":"edit_lines"},{"containerName":"edit_lines","line":1033,"name":"$temp_fh","kind":13},{"name":"print","kind":12,"containerName":"edit_lines","line":1033},{"containerName":"edit_lines","line":1033,"kind":12,"name":"_throw"},{"line":1033,"containerName":"edit_lines","kind":13,"name":"$temp"},{"kind":13,"name":"$temp_fh","containerName":"edit_lines","line":1036},{"containerName":"edit_lines","line":1036,"kind":13,"name":"$self"},{"name":"_throw","kind":12,"line":1036,"containerName":"edit_lines"},{"name":"$temp","kind":13,"containerName":"edit_lines","line":1036},{"kind":13,"name":"$in_fh","containerName":"edit_lines","line":1037},{"kind":13,"name":"$self","line":1037,"containerName":"edit_lines"},{"line":1037,"containerName":"edit_lines","name":"_throw","kind":12},{"line":1039,"containerName":"edit_lines","kind":13,"name":"$temp"},{"kind":12,"name":"move","line":1039,"containerName":"edit_lines"},{"line":1039,"containerName":"edit_lines","kind":13,"name":"$resolved_path"}],"range":{"start":{"line":1010,"character":0},"end":{"line":1040,"character":9999}},"line":1010,"containerName":"Path::Tiny","definition":"sub"},{"containerName":"croak","line":1014,"kind":12,"name":"Carp"},{"line":1017,"name":"binmode","kind":12},{"line":1026,"name":"exclusive","kind":12},{"line":1026,"name":"locked","kind":12},{"line":1027,"name":"locked","kind":12},{"kind":12,"name":"readline","line":1031},{"line":1033,"name":"self","kind":12},{"containerName":"Path::Tiny","definition":"sub","line":1042,"children":[],"range":{"end":{"line":1042,"character":9999},"start":{"line":1042,"character":0}},"kind":12,"name":"edit_lines_raw"},{"line":1042,"name":"binmode","kind":12},{"kind":12,"name":"edit_lines_utf8","range":{"end":{"character":9999,"line":1052},"start":{"character":0,"line":1044}},"children":[{"line":1045,"containerName":"edit_lines_utf8","name":"$HAS_PU","kind":13},{"line":1045,"containerName":"edit_lines_utf8","kind":13,"name":"$HAS_PU"},{"kind":13,"name":"$HAS_PU","containerName":"edit_lines_utf8","line":1045}],"line":1044,"definition":"sub","containerName":"Path::Tiny"},{"kind":12,"name":"binmode","line":1046},{"name":"binmode","kind":12,"line":1049},{"definition":"sub","containerName":"Path::Tiny","line":1073,"range":{"start":{"character":0,"line":1073},"end":{"line":1073,"character":9999}},"children":[],"kind":12,"name":"exists"},{"line":1073,"kind":12,"name":"PATH"},{"line":1075,"definition":"sub","containerName":"Path::Tiny","name":"is_file","kind":12,"range":{"start":{"line":1075,"character":0},"end":{"line":1075,"character":9999}},"children":[]},{"kind":12,"name":"PATH","line":1075},{"line":1077,"definition":"sub","containerName":"Path::Tiny","kind":12,"name":"is_dir","range":{"start":{"line":1077,"character":0},"end":{"character":9999,"line":1077}},"children":[]},{"line":1077,"kind":12,"name":"PATH"},{"range":{"start":{"line":1109,"character":0},"end":{"character":9999,"line":1179}},"detail":"($self,@args)","name":"filehandle","signature":{"label":"filehandle($self,@args)","documentation":"pod =method filehandle\npod\npod     $fh = path(\"/tmp/foo.txt\")->filehandle($mode, $binmode);\npod     $fh = path(\"/tmp/foo.txt\")->filehandle({ locked => 1 }, $mode, $binmode);\npod     $fh = path(\"/tmp/foo.txt\")->filehandle({ exclusive => 1  }, $mode, $binmode);\npod\npod Returns an open file handle.  The C<$mode> argument must be a Perl-style\npod read/write mode string (\"<\" ,\">\", \">>\", etc.).  If a C<$binmode>\npod is given, it is set during the C<open> call.\npod\npod An optional hash reference may be used to pass options.\npod\npod The C<locked> option governs file locking; if true, handles opened for writing,\npod appending or read-write are locked with C<LOCK_EX>; otherwise, they are\npod locked with C<LOCK_SH>.  When using C<locked>, \">\" or \"+>\" modes will delay\npod truncation until after the lock is acquired.\npod\npod The C<exclusive> option causes the open() call to fail if the file already\npod exists.  This corresponds to the O_EXCL flag to sysopen / open(2).\npod C<exclusive> implies C<locked> and will set it for you if you forget it.\npod\npod See C<openr>, C<openw>, C<openrw>, and C<opena> for sugar.\npod\npod Current API available since 0.066.\npod\npod =cut\n Note: must put binmode on open line, not subsequent binmode() call, so things\n like \":unix\" actually stop perlio/crlf from being added","parameters":[{"label":"$self"},{"label":"@args"}]},"definition":"sub","containerName":"Path::Tiny","line":1109,"children":[{"name":"$self","kind":13,"localvar":"my","line":1110,"definition":"my","containerName":"filehandle"},{"name":"@args","kind":13,"containerName":"filehandle","line":1110},{"localvar":"my","name":"$args","kind":13,"containerName":"filehandle","definition":"my","line":1111},{"containerName":"filehandle","line":1111,"name":"@args","kind":13},{"containerName":"filehandle","line":1111,"name":"$args","kind":13},{"kind":13,"name":"@args","line":1111,"containerName":"filehandle"},{"line":1112,"containerName":"filehandle","kind":13,"name":"$args"},{"kind":13,"name":"$args","containerName":"filehandle","line":1112},{"containerName":"filehandle","line":1113,"name":"$args","kind":13},{"kind":13,"name":"$args","line":1113,"containerName":"filehandle"},{"localvar":"my","name":"$opentype","kind":13,"containerName":"filehandle","definition":"my","line":1114},{"containerName":"filehandle","line":1114,"name":"$binmode","kind":13},{"containerName":"filehandle","line":1114,"kind":13,"name":"@args"},{"line":1116,"containerName":"filehandle","name":"$opentype","kind":13},{"containerName":"filehandle","line":1116,"name":"$opentype","kind":13},{"name":"$opentype","kind":13,"line":1118,"containerName":"filehandle"},{"kind":13,"name":"$binmode","line":1120,"containerName":"filehandle"},{"containerName":"filehandle","line":1120,"kind":13,"name":"$opentype"},{"kind":13,"name":"$binmode","line":1121,"containerName":"filehandle"},{"containerName":"filehandle","line":1122,"kind":13,"name":"$binmode"},{"name":"$binmode","kind":13,"line":1122,"containerName":"filehandle"},{"kind":13,"name":"$fh","localvar":"my","line":1124,"definition":"my","containerName":"filehandle"},{"name":"$lock","kind":13,"line":1124,"containerName":"filehandle"},{"name":"$trunc","kind":13,"line":1124,"containerName":"filehandle"},{"name":"$HAS_FLOCK","kind":13,"line":1125,"containerName":"filehandle"},{"line":1125,"containerName":"filehandle","name":"$args","kind":13},{"line":1125,"containerName":"filehandle","kind":13,"name":"$ENV"},{"line":1128,"containerName":"filehandle","name":"$opentype","kind":13},{"definition":"my","containerName":"filehandle","line":1130,"kind":13,"name":"$flags","localvar":"my"},{"name":"$opentype","kind":13,"containerName":"filehandle","line":1130},{"name":"$flags","kind":13,"containerName":"filehandle","line":1131},{"name":"$flags","kind":13,"line":1132,"containerName":"filehandle"},{"containerName":"filehandle","line":1132,"name":"$args","kind":13},{"line":1133,"containerName":"filehandle","name":"$fh","kind":13},{"kind":13,"name":"$self","containerName":"filehandle","line":1133},{"line":1133,"containerName":"filehandle","kind":13,"name":"$flags"},{"containerName":"filehandle","line":1133,"kind":13,"name":"$self"},{"line":1133,"containerName":"filehandle","kind":12,"name":"_throw"},{"name":"$binmode","kind":13,"line":1137,"containerName":"filehandle"},{"kind":13,"name":"$fh","line":1139,"containerName":"filehandle"},{"kind":13,"name":"$self","containerName":"filehandle","line":1139},{"containerName":"filehandle","line":1139,"name":"_throw","kind":12},{"name":"$layers","kind":13,"localvar":"my","definition":"my","containerName":"filehandle","line":1141},{"kind":13,"name":"$fh","containerName":"filehandle","line":1141},{"name":"$fh","kind":13,"line":1142,"containerName":"filehandle"},{"containerName":"filehandle","line":1142,"name":"$self","kind":13},{"name":"_throw","kind":12,"line":1142,"containerName":"filehandle"},{"kind":13,"name":"$binmode","containerName":"filehandle","line":1147},{"kind":13,"name":"$fh","containerName":"filehandle","line":1148},{"kind":13,"name":"$binmode","containerName":"filehandle","line":1148},{"containerName":"filehandle","line":1148,"name":"$self","kind":13},{"line":1148,"containerName":"filehandle","name":"_throw","kind":12},{"containerName":"filehandle","line":1152,"name":"$lock","kind":13},{"name":"$trunc","kind":13,"containerName":"filehandle","line":1153},{"line":1155,"containerName":"filehandle","kind":13,"name":"$opentype"},{"kind":13,"name":"$self","line":1160,"containerName":"filehandle"},{"name":"$opentype","kind":13,"containerName":"filehandle","line":1161},{"line":1162,"containerName":"filehandle","kind":13,"name":"$lock"},{"kind":13,"name":"$lock","line":1166,"containerName":"filehandle"},{"containerName":"filehandle","line":1166,"name":"$opentype","kind":13},{"line":1170,"containerName":"filehandle","name":"$fh","kind":13},{"localvar":"my","name":"$mode","kind":13,"containerName":"filehandle","definition":"my","line":1171},{"line":1171,"containerName":"filehandle","kind":13,"name":"$opentype"},{"name":"$binmode","kind":13,"line":1171,"containerName":"filehandle"},{"kind":13,"name":"$fh","containerName":"filehandle","line":1172},{"kind":13,"name":"$mode","containerName":"filehandle","line":1172},{"kind":13,"name":"$self","line":1172,"containerName":"filehandle"},{"containerName":"filehandle","line":1172,"name":"$self","kind":13},{"line":1172,"containerName":"filehandle","kind":12,"name":"_throw"},{"containerName":"filehandle","line":1175,"name":"$fh","kind":13},{"name":"$lock","kind":13,"containerName":"filehandle","line":1175},{"name":"$self","kind":13,"line":1175,"containerName":"filehandle"},{"name":"_throw","kind":12,"line":1175,"containerName":"filehandle"},{"containerName":"filehandle","line":1175,"kind":13,"name":"$lock"},{"kind":13,"name":"$fh","line":1176,"containerName":"filehandle"},{"kind":13,"name":"$self","line":1176,"containerName":"filehandle"},{"name":"_throw","kind":12,"line":1176,"containerName":"filehandle"},{"line":1176,"containerName":"filehandle","kind":13,"name":"$trunc"},{"name":"$fh","kind":13,"line":1178,"containerName":"filehandle"}],"kind":12},{"kind":12,"name":"locked","line":1113},{"line":1113,"kind":12,"name":"exclusive"},{"kind":12,"name":"Carp","containerName":"croak","line":1117},{"line":1125,"kind":12,"name":"locked"},{"line":1125,"kind":12,"name":"PERL_PATH_TINY_NO_FLOCK"},{"kind":12,"name":"Fcntl","line":1130,"containerName":"O_WRONLY"},{"kind":12,"name":"Fcntl","containerName":"O_RDWR","line":1130},{"name":"Fcntl","kind":12,"line":1131,"containerName":"O_CREAT"},{"line":1132,"containerName":"O_EXCL","name":"Fcntl","kind":12},{"line":1132,"kind":12,"name":"exclusive"},{"line":1133,"kind":12,"name":"sysopen"},{"kind":12,"name":"PATH","line":1133},{"name":"PerlIO","kind":12,"line":1141,"containerName":"get_layers"},{"kind":12,"name":"output","line":1141},{"line":1152,"containerName":"LOCK_EX","name":"Fcntl","kind":12},{"line":1160,"kind":12,"name":"PATH"},{"kind":12,"name":"Fcntl","line":1162,"containerName":"LOCK_EX"},{"containerName":"LOCK_SH","line":1166,"name":"Fcntl","kind":12},{"kind":12,"name":"Fcntl","containerName":"LOCK_EX","line":1166},{"line":1172,"kind":12,"name":"PATH"},{"detail":"($self,$other_path)","range":{"end":{"line":1227,"character":9999},"start":{"character":0,"line":1198}},"signature":{"documentation":"pod =method has_same_bytes\npod\npod     if ( path(\"foo.txt\")->has_same_bytes(\"bar.txt\") ) {\npod        # ...\npod     }\npod\npod This method returns true if both the invocant and the argument can be opened as\npod file handles and the handles contain the same bytes.  It returns false if their\npod contents differ.  If either can't be opened as a file (e.g. a directory or\npod non-existent file), the method throws an exception.  If both can be opened and\npod both have the same C<realpath>, the method returns true without scanning any\npod data.\npod\npod Current API available since 0.125.\npod\npod =cut","label":"has_same_bytes($self,$other_path)","parameters":[{"label":"$self"},{"label":"$other_path"}]},"name":"has_same_bytes","containerName":"Path::Tiny","definition":"sub","line":1198,"children":[{"line":1199,"containerName":"has_same_bytes","definition":"my","localvar":"my","name":"$self","kind":13},{"containerName":"has_same_bytes","line":1199,"name":"$other_path","kind":13},{"name":"$other","kind":13,"localvar":"my","definition":"my","containerName":"has_same_bytes","line":1200},{"line":1200,"containerName":"has_same_bytes","kind":13,"name":"$other_path"},{"definition":"my","containerName":"has_same_bytes","line":1202,"kind":13,"name":"$fh1","localvar":"my"},{"name":"$self","kind":13,"containerName":"has_same_bytes","line":1202},{"line":1202,"containerName":"has_same_bytes","kind":12,"name":"openr_raw"},{"kind":13,"name":"$fh2","localvar":"my","definition":"my","containerName":"has_same_bytes","line":1203},{"line":1203,"containerName":"has_same_bytes","kind":13,"name":"$other"},{"kind":12,"name":"openr_raw","containerName":"has_same_bytes","line":1203},{"kind":13,"name":"$fh1","containerName":"has_same_bytes","line":1206},{"kind":13,"name":"$self","containerName":"has_same_bytes","line":1207},{"name":"_throw","kind":12,"containerName":"has_same_bytes","line":1207},{"name":"$self","kind":13,"containerName":"has_same_bytes","line":1207},{"kind":13,"name":"$fh2","line":1209,"containerName":"has_same_bytes"},{"line":1210,"containerName":"has_same_bytes","kind":13,"name":"$self"},{"containerName":"has_same_bytes","line":1210,"name":"_throw","kind":12},{"line":1210,"containerName":"has_same_bytes","name":"$other","kind":13},{"line":1215,"containerName":"has_same_bytes","kind":13,"name":"$self"},{"kind":12,"name":"realpath","line":1215,"containerName":"has_same_bytes"},{"containerName":"has_same_bytes","line":1215,"kind":13,"name":"$other"},{"containerName":"has_same_bytes","line":1215,"name":"realpath","kind":12},{"name":"$res","kind":13,"localvar":"my","line":1221,"definition":"my","containerName":"has_same_bytes"},{"line":1221,"containerName":"has_same_bytes","name":"$fh1","kind":13},{"kind":13,"name":"$fh2","containerName":"has_same_bytes","line":1221},{"kind":13,"name":"$res","containerName":"has_same_bytes","line":1222},{"name":"$self","kind":13,"line":1223,"containerName":"has_same_bytes"},{"kind":12,"name":"_throw","containerName":"has_same_bytes","line":1223},{"line":1226,"containerName":"has_same_bytes","name":"$res","kind":13}],"kind":12},{"kind":12,"name":"locked","line":1202},{"line":1203,"name":"locked","kind":12},{"line":1207,"name":"PATH","kind":12},{"name":"PATH","kind":12,"line":1210},{"name":"File","kind":12,"line":1220,"containerName":"Compare"},{"name":"File","kind":12,"line":1221,"containerName":"Compare::compare"},{"name":"is_absolute","kind":12,"children":[{"name":"dirname","kind":12,"containerName":"is_absolute","line":1240}],"range":{"start":{"line":1240,"character":0},"end":{"line":1240,"character":9999}},"line":1240,"containerName":"Path::Tiny","definition":"sub"},{"line":1242,"containerName":"Path::Tiny","definition":"sub","name":"is_relative","kind":12,"children":[{"containerName":"is_relative","line":1242,"kind":12,"name":"dirname"}],"range":{"start":{"line":1242,"character":0},"end":{"character":9999,"line":1242}}},{"children":[{"localvar":"my","name":"$self","kind":13,"line":1264,"containerName":"is_rootdir","definition":"my"},{"kind":13,"name":"$self","line":1265,"containerName":"is_rootdir"},{"containerName":"is_rootdir","line":1265,"name":"_splitpath","kind":12},{"name":"$self","kind":13,"containerName":"is_rootdir","line":1265},{"kind":13,"name":"$self","containerName":"is_rootdir","line":1266},{"containerName":"is_rootdir","line":1266,"name":"$self","kind":13}],"kind":12,"detail":"($self)","range":{"end":{"line":1267,"character":9999},"start":{"line":1263,"character":0}},"signature":{"label":"is_rootdir($self)","documentation":"pod =method is_rootdir\npod\npod     while ( ! $path->is_rootdir ) {\npod         $path = $path->parent;\npod         ...\npod     }\npod\npod Boolean for whether the path is the root directory of the volume.  I.e. the\npod C<dirname> is C<q[/]> and the C<basename> is C<q[]>.\npod\npod This works even on C<MSWin32> with drives and UNC volumes:\npod\npod     path(\"C:/\")->is_rootdir;             # true\npod     path(\"//server/share/\")->is_rootdir; #true\npod\npod Current API available since 0.038.\npod\npod =cut","parameters":[{"label":"$self"}]},"name":"is_rootdir","containerName":"Path::Tiny","definition":"sub","line":1263},{"name":"DIR","kind":12,"line":1265},{"line":1266,"kind":12,"name":"DIR"},{"name":"FILE","kind":12,"line":1266},{"children":[{"line":1307,"containerName":"iterator","definition":"my","localvar":"my","name":"$self","kind":13},{"name":"$args","kind":13,"localvar":"my","line":1308,"definition":"my","containerName":"iterator"},{"localvar":"my","name":"@dirs","kind":13,"containerName":"iterator","definition":"my","line":1309},{"containerName":"iterator","line":1309,"kind":13,"name":"$self"},{"line":1310,"containerName":"iterator","definition":"my","localvar":"my","kind":13,"name":"$current"},{"kind":13,"name":"$next","localvar":"my","definition":"my","containerName":"iterator","line":1312},{"kind":13,"name":"@dirs","containerName":"iterator","line":1313},{"containerName":"iterator","line":1314,"kind":13,"name":"$dirs"},{"name":"$dirs","kind":13,"line":1315,"containerName":"iterator"},{"name":"@dirs","kind":13,"line":1322,"containerName":"iterator"},{"containerName":"iterator","line":1324,"name":"$current","kind":13},{"kind":13,"name":"$dirs","line":1324,"containerName":"iterator"},{"line":1325,"containerName":"iterator","definition":"my","localvar":"my","kind":13,"name":"$dh"},{"line":1326,"containerName":"iterator","name":"$dh","kind":13},{"kind":13,"name":"$current","containerName":"iterator","line":1326},{"kind":13,"name":"$self","line":1327,"containerName":"iterator"},{"line":1327,"containerName":"iterator","kind":12,"name":"_throw"},{"kind":13,"name":"$current","line":1327,"containerName":"iterator"},{"line":1328,"containerName":"iterator","kind":13,"name":"$dirs"},{"name":"$dh","kind":13,"containerName":"iterator","line":1328},{"name":"$current","kind":13,"line":1329,"containerName":"iterator"},{"kind":13,"name":"$args","line":1329,"containerName":"iterator"},{"containerName":"iterator","line":1334,"kind":13,"name":"@dirs"},{"line":1337,"containerName":"iterator","name":"$next","kind":13},{"kind":13,"name":"$dirs","line":1337,"containerName":"iterator"},{"name":"$next","kind":13,"containerName":"iterator","line":1338},{"containerName":"iterator","line":1338,"kind":13,"name":"$next"},{"kind":13,"name":"$path","localvar":"my","line":1339,"definition":"my","containerName":"iterator"},{"containerName":"iterator","line":1339,"name":"$current","kind":13},{"name":"child","kind":12,"line":1339,"containerName":"iterator"},{"line":1339,"containerName":"iterator","kind":13,"name":"$next"},{"containerName":"iterator","line":1340,"kind":13,"name":"@dirs"},{"name":"$path","kind":13,"line":1341,"containerName":"iterator"},{"name":"$args","kind":13,"containerName":"iterator","line":1341},{"kind":13,"name":"$path","containerName":"iterator","line":1341},{"name":"$args","kind":13,"line":1341,"containerName":"iterator"},{"line":1341,"containerName":"iterator","name":"$path","kind":13},{"line":1342,"containerName":"iterator","kind":13,"name":"$path"},{"line":1344,"containerName":"iterator","name":"@dirs","kind":13}],"range":{"start":{"line":1306,"character":0},"end":{"line":1348,"character":9999}},"name":"iterator","kind":12,"containerName":"Path::Tiny","definition":"sub","line":1306},{"line":1326,"kind":12,"name":"PATH"},{"line":1327,"name":"PATH","kind":12},{"name":"PATH","kind":12,"line":1329},{"line":1329,"name":"follow_symlinks","kind":12},{"line":1341,"name":"recurse","kind":12},{"name":"follow_symlinks","kind":12,"line":1341},{"kind":12,"name":"lines","range":{"start":{"line":1391,"character":0},"end":{"line":1436,"character":9999}},"children":[{"name":"$self","kind":13,"localvar":"my","definition":"my","containerName":"lines","line":1392},{"definition":"my","containerName":"lines","line":1393,"name":"$args","kind":13,"localvar":"my"},{"localvar":"my","kind":13,"name":"$binmode","line":1394,"containerName":"lines","definition":"my"},{"kind":13,"name":"$args","containerName":"lines","line":1394},{"line":1395,"containerName":"lines","kind":13,"name":"$binmode"},{"containerName":"lines","line":1395,"name":"$binmode","kind":13},{"localvar":"my","kind":13,"name":"$fh","line":1396,"containerName":"lines","definition":"my"},{"containerName":"lines","line":1396,"name":"$self","kind":13},{"containerName":"lines","line":1396,"name":"filehandle","kind":12},{"containerName":"lines","line":1396,"kind":13,"name":"$binmode"},{"containerName":"lines","definition":"my","line":1397,"localvar":"my","kind":13,"name":"$chomp"},{"name":"$args","kind":13,"line":1397,"containerName":"lines"},{"containerName":"lines","line":1399,"name":"$args","kind":13},{"localvar":"my","name":"$counter","kind":13,"containerName":"lines","definition":"my","line":1400},{"name":"$mod","kind":13,"line":1400,"containerName":"lines"},{"name":"@result","kind":13,"line":1400,"containerName":"lines"},{"line":1400,"containerName":"lines","kind":13,"name":"$args"},{"definition":"my","containerName":"lines","line":1401,"kind":13,"name":"$line","localvar":"my"},{"line":1402,"containerName":"lines","kind":13,"name":"$fh"},{"line":1403,"containerName":"lines","kind":13,"name":"$line"},{"name":"$fh","kind":13,"containerName":"lines","line":1403},{"containerName":"lines","line":1403,"name":"$self","kind":13},{"containerName":"lines","line":1403,"kind":12,"name":"_throw"},{"containerName":"lines","line":1405,"kind":13,"name":"$line"},{"line":1405,"containerName":"lines","name":"$chomp","kind":13},{"kind":13,"name":"$result","line":1406,"containerName":"lines"},{"kind":13,"name":"$counter","containerName":"lines","line":1406},{"containerName":"lines","line":1406,"kind":13,"name":"$line"},{"line":1408,"containerName":"lines","kind":13,"name":"$counter"},{"kind":13,"name":"$args","line":1408,"containerName":"lines"},{"containerName":"lines","line":1410,"kind":13,"name":"$counter"},{"name":"$mod","kind":13,"containerName":"lines","line":1410},{"name":"@result","kind":13,"containerName":"lines","line":1413},{"line":1413,"containerName":"lines","name":"@result","kind":13},{"line":1413,"containerName":"lines","kind":13,"name":"$counter"},{"containerName":"lines","line":1414,"name":"@result","kind":13},{"line":1414,"containerName":"lines","kind":13,"name":"$mod"},{"line":1414,"containerName":"lines","name":"$counter","kind":13},{"containerName":"lines","line":1414,"kind":13,"name":"$mod"},{"line":1415,"containerName":"lines","name":"@result","kind":13},{"kind":13,"name":"$chomp","line":1417,"containerName":"lines"},{"definition":"my","containerName":"lines","line":1419,"kind":13,"name":"@lines","localvar":"my"},{"name":"$fh","kind":13,"line":1419,"containerName":"lines"},{"containerName":"lines","line":1420,"name":"$self","kind":13},{"line":1420,"containerName":"lines","kind":12,"name":"_throw"},{"kind":13,"name":"@lines","line":1421,"containerName":"lines"},{"localvar":"my","name":"@lines","kind":13,"containerName":"lines","definition":"my","line":1426},{"name":"$fh","kind":13,"line":1426,"containerName":"lines"},{"name":"$self","kind":13,"line":1427,"containerName":"lines"},{"line":1427,"containerName":"lines","kind":12,"name":"_throw"},{"line":1428,"containerName":"lines","name":"@lines","kind":13},{"localvar":"my","name":"$count","kind":13,"line":1431,"containerName":"lines","definition":"my"},{"name":"$fh","kind":13,"line":1431,"containerName":"lines"},{"kind":13,"name":"$self","line":1432,"containerName":"lines"},{"name":"_throw","kind":12,"containerName":"lines","line":1432},{"line":1433,"containerName":"lines","kind":13,"name":"$count"}],"line":1391,"definition":"sub","containerName":"Path::Tiny"},{"kind":12,"name":"binmode","line":1394},{"line":1396,"name":"locked","kind":12},{"line":1397,"name":"chomp","kind":12},{"line":1399,"name":"count","kind":12},{"kind":12,"name":"count","line":1400},{"line":1403,"name":"readline","kind":12},{"line":1408,"name":"count","kind":12},{"kind":12,"name":"lines_raw","children":[{"definition":"my","containerName":"lines_raw","line":1439,"name":"$self","kind":13,"localvar":"my"},{"line":1440,"containerName":"lines_raw","definition":"my","localvar":"my","kind":13,"name":"$args"},{"kind":13,"name":"$args","line":1441,"containerName":"lines_raw"},{"containerName":"lines_raw","line":1441,"kind":13,"name":"$args"},{"name":"$self","kind":13,"line":1442,"containerName":"lines_raw"},{"name":"$args","kind":13,"containerName":"lines_raw","line":1445},{"kind":13,"name":"$self","line":1446,"containerName":"lines_raw"},{"kind":13,"name":"$args","line":1446,"containerName":"lines_raw"}],"range":{"start":{"character":0,"line":1438},"end":{"line":1448,"character":9999}},"line":1438,"containerName":"Path::Tiny","definition":"sub"},{"kind":12,"name":"chomp","line":1441},{"name":"count","kind":12,"line":1441},{"line":1442,"kind":12,"name":"slurp_raw"},{"line":1445,"name":"binmode","kind":12},{"definition":"my","containerName":null,"line":1450,"name":"$CRLF","kind":13,"localvar":"my"},{"name":"lines_utf8","kind":12,"range":{"end":{"character":9999,"line":1471},"start":{"character":0,"line":1452}},"children":[{"definition":"my","containerName":"lines_utf8","line":1453,"name":"$self","kind":13,"localvar":"my"},{"localvar":"my","name":"$args","kind":13,"containerName":"lines_utf8","definition":"my","line":1454},{"name":"$HAS_UU","kind":13,"line":1455,"containerName":"lines_utf8"},{"name":"$HAS_UU","kind":13,"line":1455,"containerName":"lines_utf8"},{"kind":13,"name":"$HAS_UU","containerName":"lines_utf8","line":1455},{"kind":13,"name":"$args","containerName":"lines_utf8","line":1456},{"kind":13,"name":"$args","containerName":"lines_utf8","line":1457},{"definition":"my","containerName":"lines_utf8","line":1459,"name":"$slurp","kind":13,"localvar":"my"},{"line":1459,"containerName":"lines_utf8","name":"$self","kind":13},{"kind":13,"name":"$slurp","line":1460,"containerName":"lines_utf8"},{"kind":13,"name":"$CRLF","containerName":"lines_utf8","line":1461},{"name":"$slurp","kind":13,"containerName":"lines_utf8","line":1461},{"kind":13,"name":"$HAS_PU","line":1463,"containerName":"lines_utf8"},{"containerName":"lines_utf8","line":1463,"kind":13,"name":"$HAS_PU"},{"containerName":"lines_utf8","line":1463,"kind":13,"name":"$HAS_PU"},{"kind":13,"name":"$args","containerName":"lines_utf8","line":1464},{"containerName":"lines_utf8","line":1465,"name":"$self","kind":13},{"line":1465,"containerName":"lines_utf8","kind":13,"name":"$args"},{"containerName":"lines_utf8","line":1468,"name":"$args","kind":13},{"name":"$self","kind":13,"containerName":"lines_utf8","line":1469},{"line":1469,"containerName":"lines_utf8","kind":13,"name":"$args"}],"line":1452,"definition":"sub","containerName":"Path::Tiny"},{"line":1456,"kind":12,"name":"chomp"},{"line":1457,"kind":12,"name":"count"},{"name":"slurp_utf8","kind":12,"line":1459},{"kind":12,"name":"binmode","line":1464},{"name":"binmode","kind":12,"line":1468},{"kind":12,"children":[{"line":1491,"containerName":"mkdir","definition":"my","localvar":"my","name":"$self","kind":13},{"kind":13,"name":"$args","containerName":"mkdir","line":1491},{"kind":13,"name":"$args","line":1492,"containerName":"mkdir"},{"line":1492,"containerName":"mkdir","name":"$args","kind":13},{"line":1493,"definition":"my","containerName":"mkdir","name":"$err","kind":13,"localvar":"my"},{"line":1494,"containerName":"mkdir","kind":13,"name":"$args"},{"name":"$err","kind":13,"line":1494,"containerName":"mkdir"},{"line":1494,"containerName":"mkdir","name":"$args","kind":13},{"localvar":"my","name":"@dirs","kind":13,"containerName":"mkdir","definition":"my","line":1496},{"definition":"my","containerName":"mkdir","line":1497,"name":"$ok","kind":13,"localvar":"my"},{"containerName":"mkdir","line":1498,"kind":13,"name":"$self"},{"kind":13,"name":"$args","line":1498,"containerName":"mkdir"},{"kind":13,"name":"$ok","containerName":"mkdir","line":1501},{"name":"$self","kind":13,"containerName":"mkdir","line":1502},{"name":"_throw","kind":12,"line":1502,"containerName":"mkdir"},{"kind":13,"name":"$self","line":1502,"containerName":"mkdir"},{"line":1504,"containerName":"mkdir","kind":13,"name":"$err"},{"containerName":"mkdir","line":1504,"kind":13,"name":"$err"},{"line":1505,"definition":"my","containerName":"mkdir","name":"$file","kind":13,"localvar":"my"},{"kind":13,"name":"$message","containerName":"mkdir","line":1505},{"name":"$err","kind":13,"containerName":"mkdir","line":1505},{"line":1506,"containerName":"mkdir","name":"$self","kind":13},{"line":1506,"containerName":"mkdir","name":"_throw","kind":12},{"line":1506,"containerName":"mkdir","kind":13,"name":"$file"},{"containerName":"mkdir","line":1506,"name":"$message","kind":13}],"line":1490,"definition":"sub","containerName":"Path::Tiny","name":"mkdir","signature":{"parameters":[{"label":"$self"},{"label":"$args"}],"documentation":"pod =method mkdir\npod\npod     path(\"foo/bar/baz\")->mkdir;\npod     path(\"foo/bar/baz\")->mkdir( \\%options );\npod\npod Like calling C<make_path> from L<File::Path>.  An optional hash reference\npod is passed through to C<make_path>.  Errors will be trapped and an exception\npod thrown.  Returns the the path object to facilitate chaining.\npod\npod B<NOTE>: unlike Perl's builtin C<mkdir>, this will create intermediate paths\npod similar to the Unix C<mkdir -p> command.  It will not error if applied to an\npod existing directory.\npod\npod Current API available since 0.125.\npod\npod =cut","label":"mkdir($self,$args)"},"range":{"start":{"line":1490,"character":0},"end":{"line":1507,"character":9999}},"detail":"($self,$args)"},{"line":1494,"kind":12,"name":"error"},{"line":1494,"name":"error","kind":12},{"kind":12,"name":"File","line":1495,"containerName":"Path"},{"containerName":"Path::make_path","line":1498,"name":"File","kind":12},{"line":1498,"name":"PATH","kind":12},{"kind":12,"name":"PATH","line":1502},{"kind":13,"name":"$self","containerName":null,"line":1508},{"kind":12,"children":[{"name":"$self","kind":13,"localvar":"my","definition":"my","containerName":"mkpath","line":1521},{"line":1521,"containerName":"mkpath","kind":13,"name":"$args"},{"line":1522,"containerName":"mkpath","name":"$args","kind":13},{"kind":13,"name":"$args","line":1522,"containerName":"mkpath"},{"localvar":"my","kind":13,"name":"$err","containerName":"mkpath","definition":"my","line":1523},{"kind":13,"name":"$args","line":1524,"containerName":"mkpath"},{"containerName":"mkpath","line":1524,"name":"$err","kind":13},{"kind":13,"name":"$args","line":1524,"containerName":"mkpath"},{"kind":13,"name":"@dirs","localvar":"my","line":1526,"definition":"my","containerName":"mkpath"},{"line":1526,"containerName":"mkpath","name":"$self","kind":13},{"name":"$args","kind":13,"line":1526,"containerName":"mkpath"},{"line":1527,"containerName":"mkpath","kind":13,"name":"$err"},{"kind":13,"name":"$err","containerName":"mkpath","line":1527},{"kind":13,"name":"$file","localvar":"my","line":1528,"definition":"my","containerName":"mkpath"},{"containerName":"mkpath","line":1528,"name":"$message","kind":13},{"line":1528,"containerName":"mkpath","kind":13,"name":"$err"}],"name":"mkpath","signature":{"parameters":[{"label":"$self"},{"label":"$args"}],"documentation":"pod =method mkpath (deprecated)\npod\npod Like calling C<mkdir>, but returns the list of directories created or an empty list if\npod the directories already exist, just like C<make_path>.\npod\npod Deprecated in 0.125.\npod\npod =cut","label":"mkpath($self,$args)"},"range":{"start":{"character":0,"line":1520},"end":{"line":1530,"character":9999}},"detail":"($self,$args)","line":1520,"definition":"sub","containerName":"Path::Tiny"},{"name":"error","kind":12,"line":1524},{"line":1524,"name":"error","kind":12},{"containerName":"Path","line":1525,"name":"File","kind":12},{"name":"File","kind":12,"containerName":"Path::make_path","line":1526},{"line":1526,"kind":12,"name":"PATH"},{"line":1529,"containerName":"croak","name":"Carp","kind":12},{"line":1531,"containerName":null,"name":"@dirs","kind":13},{"kind":12,"children":[{"line":1559,"containerName":"move","definition":"my","localvar":"my","kind":13,"name":"$self"},{"line":1559,"containerName":"move","name":"$dest","kind":13},{"containerName":"move","line":1561,"name":"$self","kind":13},{"containerName":"move","line":1561,"name":"$dest","kind":13},{"containerName":"move","line":1562,"name":"$self","kind":13},{"containerName":"move","line":1562,"name":"_throw","kind":12},{"containerName":"move","line":1562,"name":"$self","kind":13},{"containerName":"move","line":1564,"name":"$dest","kind":13},{"containerName":"move","line":1564,"name":"$dest","kind":13},{"name":"$self","kind":13,"line":1564,"containerName":"move"},{"range":{"start":{}},"detail":"($self,@args)","name":"basename","kind":12,"signature":{"label":"basename($self,@args)","documentation":"","parameters":[{"label":"$self"},{"label":"@args"}]},"containerName":"move","line":1564},{"containerName":"move","line":1564,"kind":13,"name":"$dest"}],"signature":{"documentation":"pod =method move\npod\npod     path(\"foo.txt\")->move(\"bar.txt\");\npod\npod Moves the current path to the given destination using L<File::Copy>'s\npod C<move> function. Upon success, returns the C<Path::Tiny> object for the\npod newly moved file.\npod\npod If the destination already exists and is a directory, and the source is not a\npod directory, then the source file will be renamed into the directory\npod specified by the destination.\npod\npod If possible, move() will simply rename the file. Otherwise, it\npod copies the file to the new location and deletes the original. If an\npod error occurs during this copy-and-delete process, you may be left\npod with a (possibly partial) copy of the file under the destination\npod name.\npod\npod Current API available since 0.124. Prior versions used Perl's\npod -built-in (and less robust) L<rename|perlfunc/rename> function\npod and did not return an object.\npod\npod =cut","label":"move($self,$dest)","parameters":[{"label":"$self"},{"label":"$dest"}]},"name":"move","detail":"($self,$dest)","range":{"end":{"character":9999,"line":1565},"start":{"character":0,"line":1558}},"line":1558,"containerName":"Path::Tiny","definition":"sub"},{"containerName":"Copy","line":1560,"kind":12,"name":"File"},{"kind":12,"name":"File","containerName":"Copy::move","line":1561},{"name":"PATH","kind":12,"line":1561},{"name":"PATH","kind":12,"line":1562},{"containerName":null,"definition":"my","line":1604,"localvar":"my","kind":13,"name":"%opens"},{"line":1605,"kind":12,"name":"opena"},{"line":1606,"kind":12,"name":"openr"},{"line":1607,"kind":12,"name":"openw"},{"kind":12,"name":"openrw","line":1608},{"localvar":"my","name":"$k","kind":13,"containerName":null,"definition":"my","line":1611},{"kind":13,"name":"$v","containerName":null,"line":1611},{"line":1611,"containerName":null,"kind":13,"name":"%opens"},{"kind":12,"name":"strict","line":1612},{"containerName":null,"line":1614,"name":"%k","kind":13},{"name":"$self","kind":13,"localvar":"my","definition":"my","containerName":null,"line":1615},{"line":1615,"containerName":null,"kind":13,"name":"@args"},{"line":1616,"containerName":null,"definition":"my","localvar":"my","name":"$args","kind":13},{"line":1616,"containerName":null,"kind":13,"name":"@args"},{"line":1616,"containerName":null,"kind":13,"name":"@args"},{"name":"@args","kind":13,"containerName":null,"line":1616},{"name":"$args","kind":13,"line":1617,"containerName":null},{"containerName":null,"line":1617,"kind":13,"name":"$args"},{"localvar":"my","kind":13,"name":"$binmode","containerName":null,"definition":"my","line":1618},{"name":"@args","kind":13,"containerName":null,"line":1618},{"containerName":null,"line":1619,"name":"@binmode","kind":13},{"containerName":null,"line":1619,"kind":13,"name":"$v"},{"line":1620,"containerName":null,"kind":13,"name":"$binmode"},{"containerName":null,"line":1621,"kind":13,"name":"$self"},{"containerName":"Path::Tiny","line":1621,"range":{"start":{}},"detail":"($self,@args)","name":"filehandle","kind":12,"signature":{"parameters":[{"label":"$self"},{"label":"@args"}],"documentation":"","label":"filehandle($self,@args)"}},{"line":1621,"containerName":null,"name":"$args","kind":13},{"containerName":null,"line":1621,"kind":13,"name":"$v"},{"name":"%binmode","kind":13,"containerName":null,"line":1621},{"kind":13,"name":"%k","containerName":null,"line":1623},{"kind":13,"name":"$self","localvar":"my","line":1624,"definition":"my","containerName":null},{"line":1624,"containerName":null,"kind":13,"name":"@args"},{"name":"$args","kind":13,"localvar":"my","line":1625,"definition":"my","containerName":null},{"containerName":null,"line":1625,"name":"@args","kind":13},{"line":1625,"containerName":null,"kind":13,"name":"@args"},{"line":1625,"containerName":null,"name":"@args","kind":13},{"name":"$args","kind":13,"line":1626,"containerName":null},{"line":1626,"containerName":null,"kind":13,"name":"$args"},{"kind":13,"name":"$self","containerName":null,"line":1627},{"line":1627,"containerName":"Path::Tiny","signature":{"documentation":"","label":"filehandle($self,@args)","parameters":[{"label":"$self"},{"label":"@args"}]},"name":"filehandle","kind":12,"detail":"($self,@args)","range":{"start":{}}},{"line":1627,"containerName":null,"kind":13,"name":"$args"},{"line":1627,"containerName":null,"kind":13,"name":"%v"},{"kind":13,"name":"%k","containerName":null,"line":1629},{"containerName":null,"definition":"my","line":1630,"localvar":"my","kind":13,"name":"$self"},{"name":"@args","kind":13,"line":1630,"containerName":null},{"kind":13,"name":"$args","localvar":"my","line":1631,"definition":"my","containerName":null},{"containerName":null,"line":1631,"kind":13,"name":"@args"},{"containerName":null,"line":1631,"name":"@args","kind":13},{"containerName":null,"line":1631,"kind":13,"name":"@args"},{"containerName":null,"line":1632,"kind":13,"name":"$args"},{"line":1632,"containerName":null,"name":"$args","kind":13},{"containerName":null,"definition":"my","line":1633,"localvar":"my","kind":13,"name":"$layer"},{"line":1634,"containerName":null,"kind":13,"name":"$HAS_PU"},{"containerName":null,"line":1634,"name":"$HAS_PU","kind":13},{"name":"%HAS_PU","kind":13,"line":1634,"containerName":null},{"name":"%layer","kind":13,"line":1635,"containerName":null},{"line":1638,"containerName":null,"name":"$layer","kind":13},{"name":"$self","kind":13,"containerName":null,"line":1640},{"containerName":"Path::Tiny","line":1640,"name":"filehandle","kind":12},{"name":"$args","kind":13,"line":1640,"containerName":null},{"line":1640,"containerName":null,"name":"$v","kind":13},{"containerName":null,"line":1640,"name":"$layer","kind":13},{"detail":"($self,$level)","range":{"end":{"character":9999,"line":1690},"start":{"character":0,"line":1662}},"signature":{"label":"parent($self,$level)","documentation":"pod =method parent\npod\npod     $parent = path(\"foo/bar/baz\")->parent; # foo/bar\npod     $parent = path(\"foo/wibble.txt\")->parent; # foo\npod\npod     $parent = path(\"foo/bar/baz\")->parent(2); # foo\npod\npod Returns a C<Path::Tiny> object corresponding to the parent directory of the\npod original directory or file. An optional positive integer argument is the number\npod of parent directories upwards to return.  C<parent> by itself is equivalent to\npod C<parent(1)>.\npod\npod Current API available since 0.014.\npod\npod =cut\n XXX this is ugly and coverage is incomplete.  I think it's there for windows\n so need to check coverage there and compare","parameters":[{"label":"$self"},{"label":"$level"}]},"name":"parent","containerName":"Path::Tiny","definition":"sub","line":1662,"children":[{"kind":13,"name":"$self","localvar":"my","definition":"my","containerName":"parent","line":1663},{"containerName":"parent","line":1663,"kind":13,"name":"$level"},{"line":1664,"containerName":"parent","kind":13,"name":"$level"},{"line":1664,"containerName":"parent","kind":13,"name":"$level"},{"name":"$level","kind":13,"line":1664,"containerName":"parent"},{"line":1665,"containerName":"parent","kind":13,"name":"$self"},{"containerName":"parent","line":1665,"kind":12,"name":"_splitpath"},{"line":1665,"containerName":"parent","kind":13,"name":"$self"},{"line":1666,"containerName":"parent","definition":"my","localvar":"my","name":"$parent","kind":13},{"kind":13,"name":"$self","containerName":"parent","line":1667},{"kind":13,"name":"$self","containerName":"parent","line":1668},{"line":1668,"containerName":"parent","name":"$self","kind":13},{"line":1669,"containerName":"parent","kind":13,"name":"$parent"},{"kind":13,"name":"$self","line":1669,"containerName":"parent"},{"name":"$parent","kind":13,"line":1672,"containerName":"parent"},{"containerName":"parent","line":1672,"kind":13,"name":"$self"},{"line":1672,"containerName":"parent","name":"$self","kind":13},{"line":1675,"containerName":"parent","kind":13,"name":"$self"},{"line":1678,"containerName":"parent","kind":13,"name":"$self"},{"containerName":"parent","line":1679,"kind":13,"name":"$parent"},{"containerName":"parent","line":1679,"name":"$self","kind":13},{"containerName":"parent","line":1679,"kind":13,"name":"$self"},{"localvar":"my","name":"$dir","kind":13,"line":1682,"containerName":"parent","definition":"my"},{"name":"$self","kind":13,"line":1682,"containerName":"parent"},{"line":1683,"containerName":"parent","kind":13,"name":"$parent"},{"line":1683,"containerName":"parent","name":"$self","kind":13},{"name":"$dir","kind":13,"line":1683,"containerName":"parent"},{"kind":13,"name":"$parent","containerName":"parent","line":1687},{"kind":13,"name":"$self","line":1687,"containerName":"parent"},{"name":"$level","kind":13,"line":1689,"containerName":"parent"},{"kind":13,"name":"$parent","containerName":"parent","line":1689},{"kind":13,"name":"$parent","containerName":"parent","line":1689},{"kind":12,"name":"parent","line":1689,"containerName":"parent"},{"name":"$level","kind":13,"line":1689,"containerName":"parent"}],"kind":12},{"name":"FILE","kind":12,"line":1665},{"name":"FILE","kind":12,"line":1667},{"kind":12,"name":"FILE","line":1668},{"line":1668,"name":"FILE","kind":12},{"line":1669,"name":"PATH","kind":12},{"line":1672,"kind":12,"name":"_non_empty"},{"line":1672,"kind":12,"name":"VOL"},{"name":"DIR","kind":12,"line":1672},{"line":1675,"name":"DIR","kind":12},{"kind":12,"name":"DIR","line":1678},{"line":1679,"name":"VOL","kind":12},{"line":1679,"name":"DIR","kind":12},{"line":1682,"name":"DIR","kind":12},{"line":1683,"name":"VOL","kind":12},{"kind":12,"name":"_non_empty","line":1687},{"name":"VOL","kind":12,"line":1687},{"range":{"start":{"character":0,"line":1692},"end":{"character":9999,"line":1695}},"children":[{"containerName":"_non_empty","definition":"my","line":1693,"localvar":"my","name":"$string","kind":13},{"kind":13,"name":"$string","line":1694,"containerName":"_non_empty"},{"line":1694,"containerName":"_non_empty","name":"$string","kind":13},{"containerName":"_non_empty","line":1694,"kind":13,"name":"$string"}],"name":"_non_empty","kind":12,"definition":"sub","containerName":"Path::Tiny","line":1692},{"containerName":"Path::Tiny","definition":"sub","line":1727,"children":[{"localvar":"my","kind":13,"name":"$self","line":1728,"containerName":"realpath","definition":"my"},{"line":1729,"containerName":"realpath","name":"$self","kind":13},{"containerName":"realpath","line":1729,"kind":13,"name":"$self"},{"kind":12,"name":"_resolve_symlinks","line":1729,"containerName":"realpath"},{"kind":13,"name":"$self","line":1731,"containerName":"realpath"},{"line":1731,"containerName":"realpath","name":"_splitpath","kind":12},{"kind":13,"name":"$self","containerName":"realpath","line":1731},{"definition":"my","containerName":"realpath","line":1732,"kind":13,"name":"$check_parent","localvar":"my"},{"line":1733,"containerName":"realpath","kind":13,"name":"$self"},{"kind":13,"name":"$self","line":1733,"containerName":"realpath"},{"kind":13,"name":"$self","containerName":"realpath","line":1733},{"containerName":"realpath","definition":"my","line":1734,"localvar":"my","name":"$realpath","kind":13},{"line":1736,"containerName":"realpath","kind":13,"name":"$SIG"},{"containerName":"realpath","line":1737,"kind":13,"name":"$check_parent"},{"name":"$self","kind":13,"line":1737,"containerName":"realpath"},{"containerName":"realpath","line":1737,"name":"parent","kind":12},{"kind":13,"name":"$self","containerName":"realpath","line":1737},{"name":"$self","kind":13,"line":1740,"containerName":"realpath"},{"kind":12,"name":"_throw","line":1740,"containerName":"realpath"},{"kind":13,"name":"$realpath","containerName":"realpath","line":1741},{"kind":13,"name":"$realpath","line":1741,"containerName":"realpath"},{"name":"$realpath","kind":13,"containerName":"realpath","line":1741},{"containerName":"realpath","line":1742,"name":"$check_parent","kind":13},{"containerName":"realpath","line":1742,"kind":13,"name":"$realpath"},{"line":1742,"containerName":"realpath","name":"$self","kind":13},{"kind":13,"name":"$realpath","line":1742,"containerName":"realpath"}],"range":{"start":{"character":0,"line":1727},"end":{"character":9999,"line":1743}},"name":"realpath","kind":12},{"kind":12,"name":"FILE","line":1731},{"line":1733,"name":"FILE","kind":12},{"line":1733,"kind":12,"name":"FILE"},{"name":"FILE","kind":12,"line":1733},{"line":1736,"name":"__WARN__","kind":12},{"kind":12,"name":"Cwd","line":1737,"containerName":"realpath"},{"line":1737,"kind":12,"name":"PATH"},{"line":1737,"name":"PATH","kind":12},{"kind":12,"name":"FILE","line":1742},{"kind":12,"children":[{"localvar":"my","name":"$self","kind":13,"containerName":"relative","definition":"my","line":1789},{"kind":13,"name":"$base","containerName":"relative","line":1789},{"containerName":"relative","line":1790,"name":"$base","kind":13},{"name":"$base","kind":13,"containerName":"relative","line":1790},{"kind":13,"name":"$base","containerName":"relative","line":1790},{"containerName":"relative","line":1790,"name":"$base","kind":13},{"name":"$self","kind":13,"line":1793,"containerName":"relative"},{"name":"$self","kind":13,"containerName":"relative","line":1793},{"containerName":"relative","line":1793,"kind":12,"name":"absolute"},{"line":1793,"containerName":"relative","kind":13,"name":"$self"},{"kind":12,"name":"is_relative","line":1793,"containerName":"relative"},{"line":1794,"containerName":"relative","name":"$base","kind":13},{"containerName":"relative","line":1794,"name":"$base","kind":13},{"kind":12,"name":"absolute","containerName":"relative","line":1794},{"kind":13,"name":"$base","containerName":"relative","line":1794},{"line":1794,"containerName":"relative","kind":12,"name":"is_relative"},{"containerName":"relative","line":1797,"name":"$self","kind":13},{"name":"$self","kind":13,"containerName":"relative","line":1797},{"name":"absolute","kind":12,"containerName":"relative","line":1797},{"name":"$self","kind":13,"line":1797,"containerName":"relative"},{"containerName":"relative","line":1797,"kind":12,"name":"volume"},{"line":1797,"containerName":"relative","name":"$base","kind":13},{"line":1797,"containerName":"relative","kind":12,"name":"volume"},{"name":"$base","kind":13,"line":1798,"containerName":"relative"},{"line":1798,"containerName":"relative","kind":13,"name":"$base"},{"kind":12,"name":"absolute","containerName":"relative","line":1798},{"name":"$self","kind":13,"line":1798,"containerName":"relative"},{"containerName":"relative","line":1798,"kind":12,"name":"volume"},{"line":1798,"containerName":"relative","kind":13,"name":"$base"},{"kind":12,"name":"volume","line":1798,"containerName":"relative"},{"line":1801,"containerName":"relative","kind":13,"name":"$self"},{"kind":12,"name":"volume","line":1801,"containerName":"relative"},{"kind":13,"name":"$base","containerName":"relative","line":1801},{"name":"volume","kind":12,"containerName":"relative","line":1801},{"name":"$self","kind":13,"containerName":"relative","line":1806},{"name":"$base","kind":13,"containerName":"relative","line":1806},{"name":"$base","kind":13,"containerName":"relative","line":1809},{"line":1809,"containerName":"relative","kind":12,"name":"subsumes"},{"kind":13,"name":"$self","containerName":"relative","line":1809},{"containerName":"relative","line":1810,"name":"$base","kind":13},{"kind":13,"name":"$base","line":1810,"containerName":"relative"},{"line":1810,"containerName":"relative","kind":12,"name":"is_rootdir"},{"line":1811,"containerName":"relative","definition":"my","localvar":"my","kind":13,"name":"$relative"},{"kind":13,"name":"$relative","line":1812,"containerName":"relative"},{"line":1813,"containerName":"relative","name":"$relative","kind":13},{"kind":13,"name":"@common","localvar":"my","definition":"my","containerName":"relative","line":1817},{"kind":13,"name":"@self_parts","line":1817,"containerName":"relative"},{"kind":13,"name":"@base_parts","line":1817,"containerName":"relative"},{"kind":13,"name":"@base_parts","line":1818,"containerName":"relative"},{"containerName":"relative","line":1818,"name":"$base","kind":13},{"name":"_just_filepath","kind":12,"containerName":"relative","line":1818},{"containerName":"relative","line":1822,"name":"$self","kind":13},{"kind":12,"name":"is_rootdir","line":1822,"containerName":"relative"},{"name":"@common","kind":13,"line":1823,"containerName":"relative"},{"containerName":"relative","line":1824,"kind":13,"name":"@base_parts"},{"line":1827,"containerName":"relative","name":"@self_parts","kind":13},{"line":1827,"containerName":"relative","kind":13,"name":"$self"},{"name":"_just_filepath","kind":12,"containerName":"relative","line":1827},{"kind":13,"name":"@self_parts","containerName":"relative","line":1829},{"containerName":"relative","line":1829,"name":"@base_parts","kind":13},{"containerName":"relative","line":1829,"name":"$self_parts","kind":13},{"containerName":"relative","line":1829,"name":"$base_parts","kind":13},{"kind":13,"name":"@common","line":1830,"containerName":"relative"},{"containerName":"relative","line":1830,"name":"@base_parts","kind":13},{"containerName":"relative","line":1831,"name":"@self_parts","kind":13},{"line":1840,"containerName":"relative","definition":"my","localvar":"my","name":"$new_base","kind":13},{"line":1840,"containerName":"relative","kind":13,"name":"$self"},{"containerName":"relative","line":1840,"kind":12,"name":"_resolve_between"},{"containerName":"relative","line":1840,"kind":13,"name":"@common"},{"line":1840,"containerName":"relative","name":"@base_parts","kind":13},{"name":"$self","kind":13,"containerName":"relative","line":1841},{"kind":12,"name":"relative","line":1841,"containerName":"relative"},{"containerName":"relative","line":1841,"kind":13,"name":"$new_base"},{"line":1846,"containerName":"relative","definition":"my","localvar":"my","kind":13,"name":"@new_path"},{"containerName":"relative","line":1846,"name":"@base_parts","kind":13},{"name":"@self_parts","kind":13,"containerName":"relative","line":1846},{"name":"@new_path","kind":13,"containerName":"relative","line":1847}],"line":1788,"containerName":"Path::Tiny","definition":"sub","signature":{"parameters":[{"label":"$self"},{"label":"$base"}],"label":"relative($self,$base)","documentation":"pod =method relative\npod\npod     $rel = path(\"/tmp/foo/bar\")->relative(\"/tmp\"); # foo/bar\npod\npod Returns a C<Path::Tiny> object with a path relative to a new base path\npod given as an argument.  If no argument is given, the current directory will\npod be used as the new base path.\npod\npod If either path is already relative, it will be made absolute based on the\npod current directly before determining the new relative path.\npod\npod The algorithm is roughly as follows:\npod\npod =for :list\npod * If the original and new base path are on different volumes, an exception\npod   will be thrown.\npod * If the original and new base are identical, the relative path is C<\".\">.\npod * If the new base subsumes the original, the relative path is the original\npod   path with the new base chopped off the front\npod * If the new base does not subsume the original, a common prefix path is\npod   determined (possibly the root directory) and the relative path will\npod   consist of updirs (C<\"..\">) to reach the common prefix, followed by the\npod   original path less the common prefix.\npod\npod Unlike C<File::Spec::abs2rel>, in the last case above, the calculation based\npod on a common prefix takes into account symlinks that could affect the updir\npod process.  Given an original path \"/A/B\" and a new base \"/A/C\",\npod (where \"A\", \"B\" and \"C\" could each have multiple path components):\npod\npod =for :list\npod * Symlinks in \"A\" don't change the result unless the last component of A is\npod   a symlink and the first component of \"C\" is an updir.\npod * Symlinks in \"B\" don't change the result and will exist in the result as\npod   given.\npod * Symlinks and updirs in \"C\" must be resolved to actual paths, taking into\npod   account the possibility that not all path components might exist on the\npod   filesystem.\npod\npod Current API available since 0.001.  New algorithm (that accounts for\npod symlinks) available since 0.079.\npod\npod =cut"},"name":"relative","detail":"($self,$base)","range":{"end":{"line":1848,"character":9999},"start":{"character":0,"line":1788}}},{"name":"_same","kind":12,"line":1801},{"line":1802,"containerName":"croak","name":"Carp","kind":12},{"line":1806,"name":"_same","kind":12},{"name":"PATH","kind":12,"line":1806},{"name":"PATH","kind":12,"line":1806},{"name":"_same","kind":12,"line":1829},{"name":"_just_filepath","kind":12,"children":[{"name":"$self","kind":13,"localvar":"my","line":1851,"definition":"my","containerName":"_just_filepath"},{"localvar":"my","kind":13,"name":"$self_vol","containerName":"_just_filepath","definition":"my","line":1852},{"name":"$self","kind":13,"line":1852,"containerName":"_just_filepath"},{"kind":12,"name":"volume","containerName":"_just_filepath","line":1852},{"line":1853,"containerName":"_just_filepath","kind":13,"name":"$self_vol"},{"definition":"my","containerName":"_just_filepath","line":1855,"name":"$self_path","kind":13,"localvar":"my"},{"containerName":"_just_filepath","line":1857,"kind":13,"name":"$self_path"}],"range":{"end":{"line":1858,"character":9999},"start":{"line":1850,"character":0}},"line":1850,"containerName":"Path::Tiny","definition":"sub"},{"line":1860,"definition":"sub","containerName":"Path::Tiny","name":"_resolve_between","signature":{"parameters":[{"label":"$self"},{"label":"$common"},{"label":"$base"}],"documentation":"","label":"_resolve_between($self,$common,$base)"},"range":{"start":{"character":0,"line":1860},"end":{"line":1881,"character":9999}},"detail":"($self,$common,$base)","kind":12,"children":[{"name":"$self","kind":13,"localvar":"my","definition":"my","containerName":"_resolve_between","line":1861},{"line":1861,"containerName":"_resolve_between","kind":13,"name":"$common"},{"kind":13,"name":"$base","containerName":"_resolve_between","line":1861},{"line":1862,"containerName":"_resolve_between","definition":"my","localvar":"my","name":"$path","kind":13},{"line":1862,"containerName":"_resolve_between","name":"$self","kind":13},{"line":1862,"containerName":"_resolve_between","name":"volume","kind":12},{"containerName":"_resolve_between","line":1862,"name":"$common","kind":13},{"containerName":"_resolve_between","definition":"my","line":1863,"localvar":"my","name":"$changed","kind":13},{"line":1864,"containerName":"_resolve_between","definition":"my","localvar":"my","name":"$p","kind":13},{"name":"$base","kind":13,"line":1864,"containerName":"_resolve_between"},{"containerName":"_resolve_between","line":1865,"kind":13,"name":"$path"},{"line":1866,"containerName":"_resolve_between","kind":13,"name":"$p"},{"line":1867,"containerName":"_resolve_between","name":"$changed","kind":13},{"kind":13,"name":"$path","line":1868,"containerName":"_resolve_between"},{"kind":13,"name":"$path","containerName":"_resolve_between","line":1869},{"kind":13,"name":"$path","containerName":"_resolve_between","line":1869},{"line":1869,"containerName":"_resolve_between","kind":12,"name":"realpath"},{"containerName":"_resolve_between","line":1872,"kind":13,"name":"$path"},{"kind":13,"name":"$path","line":1875,"containerName":"_resolve_between"},{"kind":13,"name":"$changed","containerName":"_resolve_between","line":1876},{"containerName":"_resolve_between","line":1877,"kind":13,"name":"$path"},{"name":"$path","kind":13,"line":1877,"containerName":"_resolve_between"},{"line":1877,"containerName":"_resolve_between","name":"realpath","kind":12},{"kind":13,"name":"$changed","line":1880,"containerName":"_resolve_between"},{"name":"$path","kind":13,"line":1880,"containerName":"_resolve_between"}]},{"line":1869,"name":"PATH","kind":12},{"name":"PATH","kind":12,"line":1877},{"containerName":"Path::Tiny","definition":"sub","line":1895,"children":[{"kind":13,"name":"$self","localvar":"my","line":1896,"definition":"my","containerName":"remove"},{"name":"$self","kind":13,"line":1898,"containerName":"remove"},{"line":1898,"containerName":"remove","kind":13,"name":"$self"},{"containerName":"remove","line":1900,"kind":13,"name":"$self"},{"line":1900,"containerName":"remove","name":"$self","kind":13},{"containerName":"remove","line":1900,"name":"_throw","kind":12}],"range":{"end":{"line":1901,"character":9999},"start":{"character":0,"line":1895}},"kind":12,"name":"remove"},{"line":1898,"name":"PATH","kind":12},{"line":1898,"kind":12,"name":"PATH"},{"line":1900,"name":"PATH","kind":12},{"definition":"sub","containerName":"Path::Tiny","line":1924,"range":{"end":{"line":1937,"character":9999},"start":{"character":0,"line":1924}},"detail":"($self,$args)","name":"remove_tree","signature":{"label":"remove_tree($self,$args)","documentation":"pod =method remove_tree\npod\npod     # directory\npod     path(\"foo/bar/baz\")->remove_tree;\npod     path(\"foo/bar/baz\")->remove_tree( \\%options );\npod     path(\"foo/bar/baz\")->remove_tree( { safe => 0 } ); # force remove\npod\npod Like calling C<remove_tree> from L<File::Path>, but defaults to C<safe> mode.\npod An optional hash reference is passed through to C<remove_tree>.  Errors will be\npod trapped and an exception thrown.  Returns the number of directories deleted,\npod just like C<remove_tree>.\npod\npod If you want to remove a directory only if it is empty, use the built-in\npod C<rmdir> function instead.\npod\npod     rmdir path(\"foo/bar/baz/\");\npod\npod Current API available since 0.013.\npod\npod =cut","parameters":[{"label":"$self"},{"label":"$args"}]},"children":[{"localvar":"my","kind":13,"name":"$self","line":1925,"containerName":"remove_tree","definition":"my"},{"name":"$args","kind":13,"containerName":"remove_tree","line":1925},{"kind":13,"name":"$self","containerName":"remove_tree","line":1926},{"kind":13,"name":"$self","containerName":"remove_tree","line":1926},{"containerName":"remove_tree","line":1927,"kind":13,"name":"$args"},{"kind":13,"name":"$args","containerName":"remove_tree","line":1927},{"localvar":"my","kind":13,"name":"$err","containerName":"remove_tree","definition":"my","line":1928},{"kind":13,"name":"$args","line":1929,"containerName":"remove_tree"},{"kind":13,"name":"$err","line":1929,"containerName":"remove_tree"},{"kind":13,"name":"$args","containerName":"remove_tree","line":1929},{"containerName":"remove_tree","line":1930,"kind":13,"name":"$args"},{"kind":13,"name":"$args","containerName":"remove_tree","line":1930},{"line":1932,"definition":"my","containerName":"remove_tree","name":"$count","kind":13,"localvar":"my"},{"line":1932,"containerName":"remove_tree","name":"$self","kind":13},{"line":1932,"containerName":"remove_tree","name":"$args","kind":13},{"name":"$err","kind":13,"containerName":"remove_tree","line":1934},{"line":1934,"containerName":"remove_tree","name":"$err","kind":13},{"line":1935,"containerName":"remove_tree","definition":"my","localvar":"my","name":"$file","kind":13},{"name":"$message","kind":13,"containerName":"remove_tree","line":1935},{"name":"$err","kind":13,"containerName":"remove_tree","line":1935}],"kind":12},{"line":1926,"name":"PATH","kind":12},{"name":"PATH","kind":12,"line":1926},{"line":1929,"name":"error","kind":12},{"name":"error","kind":12,"line":1929},{"line":1930,"kind":12,"name":"safe"},{"line":1930,"name":"safe","kind":12},{"kind":12,"name":"File","containerName":"Path","line":1931},{"name":"File","kind":12,"containerName":"Path::remove_tree","line":1932},{"line":1932,"kind":12,"name":"PATH"},{"line":1936,"containerName":"croak","name":"Carp","kind":12},{"line":1938,"containerName":null,"name":"$count","kind":13},{"containerName":"Path::Tiny","definition":"sub","line":1954,"children":[{"name":"$self","kind":13,"localvar":"my","line":1955,"definition":"my","containerName":"sibling"},{"line":1956,"containerName":"sibling","kind":13,"name":"$self"},{"line":1956,"containerName":"sibling","name":"parent","kind":12}],"range":{"end":{"character":9999,"line":1957},"start":{"line":1954,"character":0}},"name":"sibling","kind":12},{"line":1956,"name":"PATH","kind":12},{"children":[],"range":{"end":{"line":1985,"character":9999},"start":{"character":0,"line":1985}},"name":"size","kind":12,"containerName":"Path::Tiny","definition":"sub","line":1985},{"line":1985,"kind":12,"name":"PATH"},{"name":"%formats","kind":13,"localvar":"my","line":1987,"definition":"my","containerName":null},{"name":"_formats","kind":12,"range":{"end":{"character":9999,"line":1993},"start":{"line":1993,"character":0}},"children":[{"kind":13,"name":"$formats","containerName":"_formats","line":1993}],"line":1993,"definition":"sub","containerName":"Path::Tiny"},{"containerName":"Path::Tiny","definition":"sub","line":1995,"children":[{"definition":"my","containerName":"size_human","line":1996,"name":"$self","kind":13,"localvar":"my"},{"name":"$args","kind":13,"localvar":"my","line":1997,"definition":"my","containerName":"size_human"},{"containerName":"size_human","definition":"my","line":1998,"localvar":"my","name":"$format","kind":13},{"name":"$args","kind":13,"line":1998,"containerName":"size_human"},{"name":"$args","kind":13,"line":1998,"containerName":"size_human"},{"definition":"my","containerName":"size_human","line":1999,"kind":13,"name":"$fmt_opts","localvar":"my"},{"containerName":"size_human","line":1999,"name":"$formats","kind":13},{"containerName":"size_human","line":1999,"kind":13,"name":"$format"},{"localvar":"my","name":"$size","kind":13,"line":2001,"containerName":"size_human","definition":"my"},{"kind":13,"name":"$self","line":2001,"containerName":"size_human"},{"name":"$size","kind":13,"containerName":"size_human","line":2002},{"name":"$size","kind":13,"containerName":"size_human","line":2002},{"line":2002,"containerName":"size_human","name":"$fmt_opts","kind":13}],"range":{"end":{"character":9999,"line":2003},"start":{"character":0,"line":1995}},"kind":12,"name":"size_human"},{"name":"format","kind":12,"line":1998},{"kind":12,"name":"format","line":1998},{"name":"Carp","kind":12,"line":2000,"containerName":"croak"},{"name":"PATH","kind":12,"line":2001},{"line":2002,"kind":12,"name":"_human_size"},{"line":2005,"containerName":"Path::Tiny","definition":"sub","kind":12,"name":"_ceil","children":[],"range":{"end":{"character":9999,"line":2007},"start":{"character":0,"line":2005}}},{"line":2009,"definition":"sub","containerName":"Path::Tiny","name":"_human_size","signature":{"parameters":[{"label":"$size"},{"label":"$base"},{"label":"$log_base"},{"label":"$suffixes"}],"documentation":"","label":"_human_size($size,$base,$log_base,$suffixes)"},"range":{"end":{"character":9999,"line":2026},"start":{"line":2009,"character":0}},"detail":"($size,$base,$log_base,$suffixes)","kind":12,"children":[{"line":2010,"containerName":"_human_size","definition":"my","localvar":"my","kind":13,"name":"$size"},{"name":"$base","kind":13,"line":2010,"containerName":"_human_size"},{"line":2010,"containerName":"_human_size","kind":13,"name":"$log_base"},{"kind":13,"name":"$suffixes","line":2010,"containerName":"_human_size"},{"name":"$size","kind":13,"containerName":"_human_size","line":2011},{"localvar":"my","kind":13,"name":"$mag","line":2013,"containerName":"_human_size","definition":"my"},{"line":2013,"containerName":"_human_size","kind":13,"name":"$size"},{"containerName":"_human_size","line":2013,"name":"$log_base","kind":13},{"containerName":"_human_size","line":2014,"kind":13,"name":"$size"},{"kind":13,"name":"$base","containerName":"_human_size","line":2014},{"kind":13,"name":"$mag","containerName":"_human_size","line":2014},{"name":"$size","kind":13,"containerName":"_human_size","line":2015},{"kind":13,"name":"$mag","line":2016,"containerName":"_human_size"},{"containerName":"_human_size","line":2017,"name":"$size","kind":13},{"name":"$size","kind":13,"containerName":"_human_size","line":2017},{"name":"$size","kind":13,"containerName":"_human_size","line":2017},{"containerName":"_human_size","line":2018,"kind":13,"name":"$size"},{"name":"$size","kind":13,"containerName":"_human_size","line":2019},{"name":"$base","kind":13,"containerName":"_human_size","line":2019},{"name":"$size","kind":13,"line":2020,"containerName":"_human_size"},{"name":"$base","kind":13,"containerName":"_human_size","line":2020},{"containerName":"_human_size","line":2021,"name":"$mag","kind":13},{"localvar":"my","name":"$fmt","kind":13,"containerName":"_human_size","definition":"my","line":2024},{"name":"$mag","kind":13,"line":2024,"containerName":"_human_size"},{"containerName":"_human_size","line":2024,"name":"$size","kind":13},{"containerName":"_human_size","line":2025,"name":"$fmt","kind":13},{"containerName":"_human_size","line":2025,"kind":13,"name":"$size"},{"name":"$suffixes","kind":13,"line":2025,"containerName":"_human_size"},{"containerName":"_human_size","line":2025,"kind":13,"name":"$mag"}]},{"line":2060,"definition":"sub","containerName":"Path::Tiny","name":"slurp","kind":12,"range":{"end":{"line":2080,"character":9999},"start":{"character":0,"line":2060}},"children":[{"localvar":"my","name":"$self","kind":13,"line":2061,"containerName":"slurp","definition":"my"},{"localvar":"my","name":"$args","kind":13,"line":2062,"containerName":"slurp","definition":"my"},{"definition":"my","containerName":"slurp","line":2063,"name":"$binmode","kind":13,"localvar":"my"},{"kind":13,"name":"$args","containerName":"slurp","line":2063},{"name":"$binmode","kind":13,"line":2064,"containerName":"slurp"},{"kind":13,"name":"$binmode","line":2064,"containerName":"slurp"},{"name":"$fh","kind":13,"localvar":"my","line":2065,"definition":"my","containerName":"slurp"},{"containerName":"slurp","line":2065,"name":"$self","kind":13},{"line":2065,"containerName":"slurp","kind":12,"name":"filehandle"},{"kind":13,"name":"$binmode","containerName":"slurp","line":2065},{"containerName":"slurp","line":2066,"name":"$binmode","kind":13},{"line":2066,"containerName":"slurp","name":"$binmode","kind":13},{"localvar":"my","name":"$size","kind":13,"line":2067,"containerName":"slurp","definition":"my"},{"line":2067,"containerName":"slurp","kind":13,"name":"$fh"},{"localvar":"my","name":"$buf","kind":13,"line":2069,"containerName":"slurp","definition":"my"},{"definition":"my","containerName":"slurp","line":2070,"name":"$rc","kind":13,"localvar":"my"},{"kind":13,"name":"$fh","containerName":"slurp","line":2070},{"kind":13,"name":"$buf","line":2070,"containerName":"slurp"},{"line":2070,"containerName":"slurp","name":"$size","kind":13},{"line":2071,"containerName":"slurp","name":"$self","kind":13},{"name":"_throw","kind":12,"containerName":"slurp","line":2071},{"name":"$rc","kind":13,"containerName":"slurp","line":2071},{"name":"$buf","kind":13,"containerName":"slurp","line":2072},{"containerName":"slurp","definition":"my","line":2076,"localvar":"my","kind":13,"name":"$buf"},{"containerName":"slurp","line":2076,"name":"$fh","kind":13},{"line":2077,"containerName":"slurp","name":"$self","kind":13},{"line":2077,"containerName":"slurp","kind":12,"name":"_throw"},{"name":"$buf","kind":13,"line":2077,"containerName":"slurp"},{"line":2078,"containerName":"slurp","kind":13,"name":"$buf"}]},{"line":2063,"kind":12,"name":"binmode"},{"line":2065,"name":"locked","kind":12},{"line":2082,"containerName":"Path::Tiny","definition":"sub","name":"slurp_raw","kind":12,"children":[],"range":{"start":{"line":2082,"character":0},"end":{"character":9999,"line":2082}}},{"name":"binmode","kind":12,"line":2082},{"children":[{"containerName":"slurp_utf8","line":2085,"kind":13,"name":"$HAS_UU"},{"name":"$HAS_UU","kind":13,"line":2085,"containerName":"slurp_utf8"},{"kind":13,"name":"$HAS_UU","containerName":"slurp_utf8","line":2085},{"kind":13,"name":"$HAS_PU","containerName":"slurp_utf8","line":2088},{"kind":13,"name":"$HAS_PU","containerName":"slurp_utf8","line":2088},{"kind":13,"name":"$HAS_PU","line":2088,"containerName":"slurp_utf8"}],"range":{"end":{"character":9999,"line":2096},"start":{"character":0,"line":2084}},"kind":12,"name":"slurp_utf8","containerName":"Path::Tiny","definition":"sub","line":2084},{"containerName":"UTF8::decode_utf8","line":2086,"kind":12,"name":"Unicode"},{"name":"binmode","kind":12,"line":2086},{"name":"binmode","kind":12,"line":2089},{"kind":12,"name":"binmode","line":2093},{"containerName":"Path::Tiny","definition":"sub","line":2129,"detail":"($self,@data)","range":{"start":{"line":2129,"character":0},"end":{"line":2147,"character":9999}},"signature":{"parameters":[{"label":"$self"},{"label":"@data"}],"documentation":"pod =method spew, spew_raw, spew_utf8\npod\npod     path(\"foo.txt\")->spew(@data);\npod     path(\"foo.txt\")->spew(\\@data);\npod     path(\"foo.txt\")->spew({binmode => \":raw\"}, @data);\npod     path(\"foo.txt\")->spew_raw(@data);\npod     path(\"foo.txt\")->spew_utf8(@data);\npod\npod Writes data to a file atomically.  The file is written to a temporary file in\npod the same directory, then renamed over the original.  An optional hash reference\npod may be used to pass options.  The only option is C<binmode>, which is passed to\npod C<binmode()> on the handle used for writing.\npod\npod C<spew_raw> is like C<spew> with a C<binmode> of C<:unix> for a fast,\npod unbuffered, raw write.\npod\npod C<spew_utf8> is like C<spew> with a C<binmode> of C<:unix:encoding(UTF-8)>\npod (or C<:unix:utf8_strict> with L<PerlIO::utf8_strict>).  If L<Unicode::UTF8>\npod 0.58+ is installed, a raw, unbuffered spew will be done instead on the data\npod encoded with C<Unicode::UTF8>.\npod\npod B<NOTE>: because the file is written to a temporary file and then renamed, the\npod new file will wind up with permissions based on your current umask.  This is a\npod feature to protect you from a race condition that would otherwise give\npod different permissions than you might expect.  If you really want to keep the\npod original mode flags, use L</append> with the C<truncate> option.\npod\npod Current API available since 0.011.\npod\npod =cut","label":"spew($self,@data)"},"name":"spew","children":[{"localvar":"my","name":"$self","kind":13,"line":2130,"containerName":"spew","definition":"my"},{"containerName":"spew","line":2130,"kind":13,"name":"@data"},{"containerName":"spew","definition":"my","line":2131,"localvar":"my","name":"$args","kind":13},{"containerName":"spew","line":2131,"name":"@data","kind":13},{"line":2131,"containerName":"spew","name":"$data","kind":13},{"name":"@data","kind":13,"line":2131,"containerName":"spew"},{"name":"$args","kind":13,"containerName":"spew","line":2132},{"line":2132,"containerName":"spew","name":"$args","kind":13},{"line":2133,"definition":"my","containerName":"spew","name":"$binmode","kind":13,"localvar":"my"},{"kind":13,"name":"$args","containerName":"spew","line":2133},{"kind":13,"name":"$binmode","containerName":"spew","line":2135},{"name":"$binmode","kind":13,"line":2135,"containerName":"spew"},{"containerName":"spew","definition":"my","line":2139,"localvar":"my","name":"$resolved_path","kind":13},{"containerName":"spew","line":2139,"name":"$self","kind":13},{"name":"_resolve_symlinks","kind":12,"containerName":"spew","line":2139},{"containerName":"spew","definition":"my","line":2140,"localvar":"my","name":"$temp","kind":13},{"containerName":"spew","line":2140,"kind":13,"name":"$resolved_path"},{"containerName":"spew","line":2140,"kind":12,"name":"_replacment_path"},{"line":2142,"definition":"my","containerName":"spew","name":"$fh","kind":13,"localvar":"my"},{"containerName":"spew","line":2142,"kind":13,"name":"$temp"},{"name":"filehandle","kind":12,"containerName":"spew","line":2142},{"name":"$binmode","kind":13,"containerName":"spew","line":2142},{"kind":13,"name":"$fh","containerName":"spew","line":2143},{"name":"$_","kind":13,"line":2143,"containerName":"spew"},{"containerName":"spew","line":2143,"name":"@data","kind":13},{"line":2143,"containerName":"spew","kind":12,"name":"_throw"},{"line":2143,"containerName":"spew","name":"$temp","kind":13},{"line":2144,"containerName":"spew","kind":13,"name":"$fh"},{"name":"$self","kind":13,"line":2144,"containerName":"spew"},{"line":2144,"containerName":"spew","name":"_throw","kind":12},{"name":"$temp","kind":13,"line":2144,"containerName":"spew"},{"line":2146,"containerName":"spew","name":"$temp","kind":13},{"line":2146,"containerName":"spew","kind":12,"name":"move"},{"containerName":"spew","line":2146,"name":"$resolved_path","kind":13}],"kind":12},{"name":"binmode","kind":12,"line":2133},{"line":2142,"name":"exclusive","kind":12},{"line":2142,"kind":12,"name":"locked"},{"line":2143,"name":"self","kind":12},{"line":2143,"name":"PATH","kind":12},{"line":2144,"kind":12,"name":"PATH"},{"range":{"start":{"line":2149,"character":0},"end":{"line":2149,"character":9999}},"children":[],"name":"spew_raw","kind":12,"definition":"sub","containerName":"Path::Tiny","line":2149},{"kind":12,"name":"binmode","line":2149},{"kind":12,"name":"spew_utf8","range":{"end":{"line":2168,"character":9999},"start":{"character":0,"line":2151}},"children":[{"name":"$HAS_UU","kind":13,"containerName":"spew_utf8","line":2152},{"containerName":"spew_utf8","line":2152,"kind":13,"name":"$HAS_UU"},{"name":"$HAS_UU","kind":13,"containerName":"spew_utf8","line":2152},{"line":2153,"containerName":"spew_utf8","definition":"my","localvar":"my","name":"$self","kind":13},{"name":"$self","kind":13,"containerName":"spew_utf8","line":2155},{"containerName":"spew_utf8","line":2157,"kind":13,"name":"$_"},{"name":"$HAS_PU","kind":13,"containerName":"spew_utf8","line":2160},{"line":2160,"containerName":"spew_utf8","name":"$HAS_PU","kind":13},{"kind":13,"name":"$HAS_PU","line":2160,"containerName":"spew_utf8"}],"line":2151,"definition":"sub","containerName":"Path::Tiny"},{"name":"binmode","kind":12,"line":2156},{"line":2157,"containerName":"UTF8::encode_utf8","name":"Unicode","kind":12},{"line":2161,"name":"binmode","kind":12},{"kind":12,"name":"binmode","line":2165},{"line":2182,"containerName":"Path::Tiny","definition":"sub","kind":12,"name":"stat","children":[{"kind":13,"name":"$self","localvar":"my","definition":"my","containerName":"stat","line":2183},{"containerName":"stat","line":2185,"kind":13,"name":"$self"},{"name":"$self","kind":13,"containerName":"stat","line":2185},{"containerName":"stat","line":2185,"name":"_throw","kind":12}],"range":{"start":{"line":2182,"character":0},"end":{"character":9999,"line":2186}}},{"name":"File","kind":12,"containerName":"stat","line":2184},{"containerName":"stat::stat","line":2185,"kind":12,"name":"File"},{"line":2185,"name":"PATH","kind":12},{"definition":"sub","containerName":"Path::Tiny","line":2188,"range":{"end":{"line":2192,"character":9999},"start":{"line":2188,"character":0}},"children":[{"name":"$self","kind":13,"localvar":"my","line":2189,"definition":"my","containerName":"lstat"},{"containerName":"lstat","line":2191,"name":"$self","kind":13},{"line":2191,"containerName":"lstat","name":"$self","kind":13},{"kind":12,"name":"_throw","containerName":"lstat","line":2191}],"name":"lstat","kind":12},{"name":"File","kind":12,"containerName":"stat","line":2190},{"line":2191,"containerName":"stat::lstat","name":"File","kind":12},{"line":2191,"kind":12,"name":"PATH"},{"line":2206,"containerName":"Path::Tiny","definition":"sub","name":"stringify","kind":12,"children":[],"range":{"start":{"line":2206,"character":0},"end":{"line":2206,"character":9999}}},{"line":2206,"name":"PATH","kind":12},{"name":"PATH","kind":12,"line":2206},{"line":2206,"name":"PATH","kind":12},{"kind":12,"name":"subsumes","range":{"end":{"character":9999,"line":2265},"start":{"character":0,"line":2231}},"children":[{"name":"$self","kind":13,"localvar":"my","definition":"my","containerName":"subsumes","line":2232},{"localvar":"my","name":"$other","kind":13,"containerName":"subsumes","definition":"my","line":2235},{"line":2238,"containerName":"subsumes","name":"$self","kind":13},{"kind":12,"name":"is_absolute","containerName":"subsumes","line":2238},{"containerName":"subsumes","line":2238,"name":"$other","kind":13},{"kind":12,"name":"is_absolute","line":2238,"containerName":"subsumes"},{"containerName":"subsumes","line":2239,"name":"$other","kind":13},{"line":2239,"containerName":"subsumes","name":"$other","kind":13},{"name":"absolute","kind":12,"containerName":"subsumes","line":2239},{"containerName":"subsumes","line":2241,"kind":13,"name":"$other"},{"line":2241,"containerName":"subsumes","name":"is_absolute","kind":12},{"containerName":"subsumes","line":2241,"name":"$self","kind":13},{"kind":12,"name":"is_absolute","containerName":"subsumes","line":2241},{"containerName":"subsumes","line":2242,"name":"$self","kind":13},{"name":"$self","kind":13,"line":2242,"containerName":"subsumes"},{"name":"absolute","kind":12,"line":2242,"containerName":"subsumes"},{"line":2247,"containerName":"subsumes","kind":13,"name":"$self"},{"line":2247,"containerName":"subsumes","name":"volume","kind":12},{"line":2247,"containerName":"subsumes","kind":13,"name":"$other"},{"containerName":"subsumes","line":2247,"name":"volume","kind":12},{"name":"$other","kind":13,"line":2248,"containerName":"subsumes"},{"line":2248,"containerName":"subsumes","name":"$other","kind":13},{"containerName":"subsumes","line":2248,"kind":12,"name":"absolute"},{"kind":13,"name":"$other","line":2250,"containerName":"subsumes"},{"containerName":"subsumes","line":2250,"name":"volume","kind":12},{"name":"$self","kind":13,"containerName":"subsumes","line":2250},{"line":2250,"containerName":"subsumes","kind":12,"name":"volume"},{"containerName":"subsumes","line":2251,"name":"$self","kind":13},{"line":2251,"containerName":"subsumes","name":"$self","kind":13},{"name":"absolute","kind":12,"line":2251,"containerName":"subsumes"},{"name":"$self","kind":13,"line":2254,"containerName":"subsumes"},{"kind":13,"name":"$self","containerName":"subsumes","line":2257},{"name":"is_rootdir","kind":12,"line":2257,"containerName":"subsumes"},{"name":"$other","kind":13,"containerName":"subsumes","line":2259},{"name":"$other","kind":13,"line":2263,"containerName":"subsumes"}],"line":2231,"definition":"sub","containerName":"Path::Tiny"},{"containerName":"croak","line":2233,"kind":12,"name":"Carp"},{"line":2254,"name":"PATH","kind":12},{"line":2259,"kind":12,"name":"PATH"},{"kind":12,"name":"PATH","line":2263},{"kind":12,"children":[{"definition":"my","containerName":"touch","line":2286,"kind":13,"name":"$self","localvar":"my"},{"line":2286,"containerName":"touch","name":"$epoch","kind":13},{"containerName":"touch","line":2287,"name":"$self","kind":13},{"containerName":"touch","definition":"my","line":2288,"localvar":"my","name":"$fh","kind":13},{"name":"$self","kind":13,"line":2288,"containerName":"touch"},{"name":"openw","kind":12,"containerName":"touch","line":2288},{"containerName":"touch","line":2289,"name":"$fh","kind":13},{"name":"$self","kind":13,"containerName":"touch","line":2289},{"name":"_throw","kind":12,"line":2289,"containerName":"touch"},{"containerName":"touch","line":2291,"name":"$epoch","kind":13},{"line":2292,"containerName":"touch","kind":13,"name":"$epoch"},{"line":2292,"containerName":"touch","name":"$epoch","kind":13},{"kind":13,"name":"$self","containerName":"touch","line":2292},{"line":2293,"containerName":"touch","name":"$self","kind":13},{"containerName":"touch","line":2293,"name":"_throw","kind":12},{"name":"$self","kind":13,"line":2297,"containerName":"touch"},{"line":2298,"containerName":"touch","kind":13,"name":"$self"},{"kind":12,"name":"_throw","containerName":"touch","line":2298},{"name":"$self","kind":13,"line":2300,"containerName":"touch"}],"name":"touch","signature":{"label":"touch($self,$epoch)","documentation":"pod =method touch\npod\npod     path(\"foo.txt\")->touch;\npod     path(\"foo.txt\")->touch($epoch_secs);\npod\npod Like the Unix C<touch> utility.  Creates the file if it doesn't exist, or else\npod changes the modification and access times to the current time.  If the first\npod argument is the epoch seconds then it will be used.\npod\npod Returns the path object so it can be easily chained with other methods:\npod\npod     # won't die if foo.txt doesn't exist\npod     $content = path(\"foo.txt\")->touch->slurp;\npod\npod Current API available since 0.015.\npod\npod =cut","parameters":[{"label":"$self"},{"label":"$epoch"}]},"range":{"start":{"line":2285,"character":0},"end":{"line":2301,"character":9999}},"detail":"($self,$epoch)","line":2285,"definition":"sub","containerName":"Path::Tiny"},{"name":"PATH","kind":12,"line":2287},{"line":2292,"name":"PATH","kind":12},{"name":"PATH","kind":12,"line":2297},{"kind":12,"children":[{"definition":"my","containerName":"touchpath","line":2319,"name":"$self","kind":13,"localvar":"my"},{"localvar":"my","kind":13,"name":"$parent","line":2320,"containerName":"touchpath","definition":"my"},{"line":2320,"containerName":"touchpath","name":"$self","kind":13},{"line":2320,"containerName":"touchpath","name":"parent","kind":12},{"line":2321,"containerName":"touchpath","name":"$parent","kind":13},{"kind":12,"name":"mkdir","containerName":"touchpath","line":2321},{"containerName":"touchpath","line":2321,"name":"$parent","kind":13},{"name":"exists","kind":12,"line":2321,"containerName":"touchpath"},{"name":"$self","kind":13,"line":2322,"containerName":"touchpath"},{"containerName":"touchpath","line":2322,"kind":12,"name":"touch"}],"line":2318,"containerName":"Path::Tiny","definition":"sub","signature":{"documentation":"pod =method touchpath\npod\npod     path(\"bar/baz/foo.txt\")->touchpath;\npod\npod Combines C<mkdir> and C<touch>.  Creates the parent directory if it doesn't exist,\npod before touching the file.  Returns the path object like C<touch> does.\npod\npod If you need to pass options, use C<mkdir> and C<touch> separately:\npod\npod     path(\"bar/baz\")->mkdir( \\%options )->child(\"foo.txt\")->touch($epoch_secs);\npod\npod Current API available since 0.022.\npod\npod =cut","label":"touchpath($self)","parameters":[{"label":"$self"}]},"name":"touchpath","detail":"($self)","range":{"start":{"line":2318,"character":0},"end":{"character":9999,"line":2323}}},{"definition":"sub","containerName":"Path::Tiny","line":2374,"range":{"start":{"character":0,"line":2374},"end":{"line":2388,"character":9999}},"children":[{"containerName":"visit","definition":"my","line":2375,"localvar":"my","name":"$self","kind":13},{"localvar":"my","name":"$cb","kind":13,"containerName":"visit","definition":"my","line":2376},{"kind":13,"name":"$args","localvar":"my","line":2377,"definition":"my","containerName":"visit"},{"name":"$cb","kind":13,"line":2379,"containerName":"visit"},{"kind":13,"name":"$cb","containerName":"visit","line":2379},{"definition":"my","containerName":"visit","line":2380,"name":"$next","kind":13,"localvar":"my"},{"containerName":"visit","line":2380,"name":"$self","kind":13},{"containerName":"visit","line":2380,"name":"iterator","kind":12},{"name":"$args","kind":13,"line":2380,"containerName":"visit"},{"containerName":"visit","definition":"my","line":2381,"localvar":"my","kind":13,"name":"$state"},{"containerName":"visit","definition":"my","line":2382,"localvar":"my","kind":13,"name":"$file"},{"line":2382,"containerName":"visit","name":"$next","kind":13},{"kind":13,"name":"$file","line":2383,"containerName":"visit"},{"containerName":"visit","definition":"my","line":2384,"localvar":"my","kind":13,"name":"$r"},{"name":"$cb","kind":13,"line":2384,"containerName":"visit"},{"kind":13,"name":"$file","line":2384,"containerName":"visit"},{"line":2384,"containerName":"visit","kind":13,"name":"$state"},{"kind":13,"name":"$r","line":2385,"containerName":"visit"},{"name":"$state","kind":13,"containerName":"visit","line":2387}],"name":"visit","kind":12},{"line":2378,"containerName":"croak","kind":12,"name":"Carp"},{"name":"volume","signature":{"documentation":"pod =method volume\npod\npod     $vol = path(\"/tmp/foo.txt\")->volume;   # \"\"\npod     $vol = path(\"C:/tmp/foo.txt\")->volume; # \"C:\"\npod\npod Returns the volume portion of the path.  This is equivalent\npod to what L<File::Spec> would give from C<splitpath> and thus\npod usually is the empty string on Unix-like operating systems or the\npod drive letter for an absolute path on C<MSWin32>.\npod\npod Current API available since 0.001.\npod\npod =cut","label":"volume($self)","parameters":[{"label":"$self"}]},"range":{"start":{"character":0,"line":2404},"end":{"character":9999,"line":2408}},"detail":"($self)","line":2404,"definition":"sub","containerName":"Path::Tiny","kind":12,"children":[{"localvar":"my","name":"$self","kind":13,"line":2405,"containerName":"volume","definition":"my"},{"containerName":"volume","line":2406,"kind":13,"name":"$self"},{"containerName":"volume","line":2406,"name":"_splitpath","kind":12},{"line":2406,"containerName":"volume","name":"$self","kind":13},{"kind":13,"name":"$self","containerName":"volume","line":2407}]},{"kind":12,"name":"VOL","line":2406},{"name":"VOL","kind":12,"line":2407},{"line":2410,"definition":1,"name":"Path::Tiny::Error","kind":2},{"kind":13,"name":"@CARP_NOT","containerName":"Path::Tiny::Error","definition":"our","line":2412},{"line":2414,"containerName":"","kind":2,"name":"overload"},{"kind":12,"name":"msg","line":2414},{"kind":12,"name":"fallback","line":2414},{"signature":{"parameters":[{"label":"$class"},{"label":"$op"},{"label":"$file"},{"label":"$err"}],"label":"throw($class,$op,$file,$err)","documentation":""},"name":"throw","detail":"($class,$op,$file,$err)","range":{"start":{"character":0,"line":2416},"end":{"character":9999,"line":2421}},"line":2416,"containerName":"Path::Tiny::Error","definition":"sub","kind":12,"children":[{"line":2417,"definition":"my","containerName":"throw","name":"$class","kind":13,"localvar":"my"},{"kind":13,"name":"$op","line":2417,"containerName":"throw"},{"name":"$file","kind":13,"line":2417,"containerName":"throw"},{"name":"$err","kind":13,"containerName":"throw","line":2417},{"containerName":"throw","definition":"my","line":2418,"localvar":"my","kind":13,"name":"$trace"},{"kind":13,"name":"$msg","localvar":"my","line":2419,"definition":"my","containerName":"throw"},{"kind":13,"name":"$op","line":2420,"containerName":"throw"},{"name":"$file","kind":13,"containerName":"throw","line":2420},{"name":"$err","kind":13,"line":2420,"containerName":"throw"},{"name":"$msg","kind":13,"containerName":"throw","line":2420},{"containerName":"throw","line":2420,"name":"$class","kind":13}]},{"kind":12,"name":"Carp","line":2418,"containerName":"shortmess"},{"line":2420,"name":"op","kind":12},{"kind":12,"name":"file","line":2420},{"kind":12,"name":"err","line":2420},{"kind":12,"name":"msg","line":2420}]}