{"version":5,"vars":[{"containerName":"","line":1,"kind":2,"name":"strict"},{"containerName":"","line":2,"name":"warnings","kind":2},{"kind":2,"name":"CPAN::Common::Index::Mux::Ordered","definition":1,"line":4},{"kind":13,"name":"$VERSION","containerName":"CPAN::Common::Index::Mux::Ordered","definition":"our","line":7},{"containerName":"","line":9,"kind":2,"name":"parent"},{"kind":2,"name":"Tiny","containerName":"Class","line":11},{"name":"Load","kind":2,"line":13,"containerName":"Module"},{"range":{"start":{"character":0,"line":21},"end":{"character":9999,"line":37}},"children":[{"containerName":"BUILD","definition":"my","line":22,"localvar":"my","name":"$self","kind":13},{"containerName":"BUILD","definition":"my","line":24,"localvar":"my","name":"$resolvers","kind":13},{"kind":13,"name":"$self","containerName":"BUILD","line":24},{"line":24,"containerName":"BUILD","name":"resolvers","kind":12},{"containerName":"BUILD","line":25,"name":"$resolvers","kind":13},{"containerName":"BUILD","line":25,"name":"$resolvers","kind":13},{"kind":13,"name":"$resolvers","line":26,"containerName":"BUILD"},{"containerName":"BUILD","definition":"my","line":29,"localvar":"my","kind":13,"name":"$r"},{"line":29,"containerName":"BUILD","name":"$resolvers","kind":13},{"line":30,"containerName":"BUILD","kind":13,"name":"$r"},{"name":"isa","kind":12,"containerName":"BUILD","line":30},{"containerName":"BUILD","line":34,"name":"$self","kind":13},{"name":"resolvers","kind":12,"containerName":"BUILD","line":34},{"line":34,"containerName":"BUILD","name":"$resolvers","kind":13}],"name":"BUILD","kind":12,"definition":"sub","containerName":"CPAN::Common::Index::Mux::Ordered","line":21},{"name":"Carp","kind":12,"containerName":"croak","line":27},{"containerName":"croak","line":31,"kind":12,"name":"Carp"},{"definition":"sub","containerName":"CPAN::Common::Index::Mux::Ordered","line":53,"range":{"start":{"character":0,"line":53},"end":{"line":68,"character":9999}},"detail":"($class,@backends)","name":"assemble","signature":{"label":"assemble($class,@backends)","documentation":"pod =method assemble\npod\npod     $index = CPAN::Common::Index::Mux::Ordered->assemble(\npod         MetaDB => {},\npod         Mirror => { mirror => \"http://www.cpan.org\" },\npod     );\npod\npod This class method provides a shorthand for constructing a multiplexer.\npod The arguments must be pairs of subclass suffixes and arguments.  For\npod example, \"MetaDB\" means to use \"CPAN::Common::Index::MetaDB\".  Empty\npod arguments must be given as an empty hash reference.\npod\npod =cut","parameters":[{"label":"$class"},{"label":"@backends"}]},"children":[{"line":54,"definition":"my","containerName":"assemble","name":"$class","kind":13,"localvar":"my"},{"containerName":"assemble","line":54,"kind":13,"name":"@backends"},{"kind":13,"name":"@resolvers","localvar":"my","line":56,"definition":"my","containerName":"assemble"},{"kind":13,"name":"@backends","line":58,"containerName":"assemble"},{"kind":13,"name":"$subclass","localvar":"my","line":59,"definition":"my","containerName":"assemble"},{"line":59,"containerName":"assemble","name":"$config","kind":13},{"kind":13,"name":"@backends","containerName":"assemble","line":59},{"line":60,"definition":"my","containerName":"assemble","name":"$full_class","kind":13,"localvar":"my"},{"containerName":"assemble","line":61,"name":"$full_class","kind":13},{"definition":"my","containerName":"assemble","line":63,"kind":13,"name":"$object","localvar":"my"},{"name":"$full_class","kind":13,"line":63,"containerName":"assemble"},{"kind":12,"name":"new","line":63,"containerName":"assemble"},{"line":63,"containerName":"assemble","name":"$config","kind":13},{"containerName":"assemble","line":64,"name":"@resolvers","kind":13},{"containerName":"assemble","line":64,"kind":13,"name":"$object"},{"kind":13,"name":"$class","line":67,"containerName":"assemble"},{"containerName":"assemble","line":67,"name":"new","kind":12},{"name":"@resolvers","kind":13,"line":67,"containerName":"assemble"}],"kind":12},{"line":61,"containerName":"Load::load","name":"Module","kind":12},{"line":62,"containerName":"croak","name":"Carp","kind":12},{"kind":12,"name":"resolvers","line":67},{"children":[{"line":71,"containerName":"validate_attributes","definition":"my","localvar":"my","kind":13,"name":"$self"},{"name":"$resolvers","kind":13,"localvar":"my","line":72,"definition":"my","containerName":"validate_attributes"},{"line":72,"containerName":"validate_attributes","kind":13,"name":"$self"},{"name":"resolvers","kind":12,"line":72,"containerName":"validate_attributes"}],"kind":12,"containerName":"CPAN::Common::Index::Mux::Ordered","definition":"sub","line":70,"detail":"($self)","range":{"end":{"line":74,"character":9999},"start":{"line":70,"character":0}},"signature":{"parameters":[{"label":"$self"}],"label":"validate_attributes($self)","documentation":""},"name":"validate_attributes"},{"kind":12,"children":[{"kind":13,"name":"$self","localvar":"my","line":79,"definition":"my","containerName":"search_packages"},{"containerName":"search_packages","line":79,"name":"$args","kind":13},{"name":"$args","kind":13,"line":81,"containerName":"search_packages"},{"containerName":"search_packages","definition":"my","line":82,"localvar":"my","name":"@found","kind":13},{"containerName":"search_packages","line":83,"name":"$args","kind":13},{"containerName":"search_packages","line":83,"kind":13,"name":"$args"},{"kind":13,"name":"$source","localvar":"my","line":85,"definition":"my","containerName":"search_packages"},{"containerName":"search_packages","line":85,"kind":13,"name":"$self"},{"containerName":"search_packages","line":85,"kind":12,"name":"resolvers"},{"line":86,"containerName":"search_packages","definition":"my","localvar":"my","kind":13,"name":"@result"},{"containerName":"search_packages","line":86,"name":"$source","kind":13},{"name":"search_packages","kind":12,"containerName":"search_packages","line":86},{"name":"$args","kind":13,"containerName":"search_packages","line":86},{"containerName":"search_packages","line":88,"name":"@found","kind":13},{"line":88,"containerName":"search_packages","name":"@result","kind":13}],"line":78,"containerName":"CPAN::Common::Index::Mux::Ordered","definition":"sub","signature":{"label":"search_packages($self,$args)","documentation":" have to think carefully about the sematics of regex search when indices\n are stacked; only one result for any given package (or package/version)","parameters":[{"label":"$self"},{"label":"$args"}]},"name":"search_packages","detail":"($self,$args)","range":{"start":{"character":0,"line":78},"end":{"line":92,"character":9999}}},{"containerName":"croak","line":80,"kind":12,"name":"Carp"},{"name":"name","kind":12,"line":83},{"line":83,"kind":12,"name":"name"},{"localvar":"my","name":"%seen","kind":13,"line":95,"containerName":null,"definition":"my"},{"definition":"my","containerName":null,"line":96,"name":"$source","kind":13,"localvar":"my"},{"name":"$self","kind":13,"containerName":null,"line":96},{"kind":12,"name":"resolvers","line":96,"containerName":"CPAN::Common::Index::Mux::Ordered"},{"containerName":null,"definition":"my","line":97,"localvar":"my","name":"@result","kind":13},{"containerName":null,"line":97,"kind":13,"name":"$source"},{"name":"search_packages","kind":12,"line":97,"containerName":"CPAN::Common::Index::Mux::Ordered"},{"line":97,"containerName":null,"name":"$args","kind":13},{"name":"@found","kind":13,"containerName":null,"line":98},{"line":98,"containerName":null,"kind":13,"name":"%seen"},{"kind":12,"name":"package","line":98},{"containerName":null,"line":98,"kind":13,"name":"@result"},{"name":"@found","kind":13,"containerName":null,"line":101},{"kind":13,"name":"@found","containerName":null,"line":101},{"kind":12,"children":[{"containerName":"search_authors","definition":"my","line":107,"localvar":"my","kind":13,"name":"$self"},{"line":107,"containerName":"search_authors","kind":13,"name":"$args"},{"name":"$args","kind":13,"containerName":"search_authors","line":109},{"name":"@found","kind":13,"localvar":"my","definition":"my","containerName":"search_authors","line":110},{"kind":13,"name":"$args","containerName":"search_authors","line":111},{"containerName":"search_authors","line":111,"name":"$args","kind":13},{"definition":"my","containerName":"search_authors","line":113,"name":"$source","kind":13,"localvar":"my"},{"name":"$self","kind":13,"containerName":"search_authors","line":113},{"containerName":"search_authors","line":113,"name":"resolvers","kind":12},{"line":114,"containerName":"search_authors","definition":"my","localvar":"my","name":"@result","kind":13},{"kind":13,"name":"$source","containerName":"search_authors","line":114},{"containerName":"search_authors","line":114,"name":"search_authors","kind":12},{"containerName":"search_authors","line":114,"kind":13,"name":"$args"},{"line":116,"containerName":"search_authors","kind":13,"name":"@found"},{"line":116,"containerName":"search_authors","kind":13,"name":"@result"}],"name":"search_authors","signature":{"parameters":[{"label":"$self"},{"label":"$args"}],"documentation":" have to think carefully about the sematics of regex search when indices\n are stacked; only one result for any given package (or package/version)","label":"search_authors($self,$args)"},"range":{"start":{"line":106,"character":0},"end":{"line":120,"character":9999}},"detail":"($self,$args)","line":106,"definition":"sub","containerName":"CPAN::Common::Index::Mux::Ordered"},{"containerName":"croak","line":108,"kind":12,"name":"Carp"},{"name":"name","kind":12,"line":111},{"line":111,"kind":12,"name":"name"},{"localvar":"my","name":"%seen","kind":13,"line":123,"containerName":null,"definition":"my"},{"localvar":"my","kind":13,"name":"$source","line":124,"containerName":null,"definition":"my"},{"name":"$self","kind":13,"line":124,"containerName":null},{"line":124,"containerName":"CPAN::Common::Index::Mux::Ordered","name":"resolvers","kind":12},{"definition":"my","containerName":null,"line":125,"name":"@result","kind":13,"localvar":"my"},{"containerName":null,"line":125,"kind":13,"name":"$source"},{"kind":12,"name":"search_authors","line":125,"containerName":"CPAN::Common::Index::Mux::Ordered"},{"line":125,"containerName":null,"name":"$args","kind":13},{"kind":13,"name":"@found","containerName":null,"line":126},{"name":"%seen","kind":13,"line":126,"containerName":null},{"line":126,"kind":12,"name":"package"},{"kind":13,"name":"@result","line":126,"containerName":null},{"line":129,"containerName":null,"name":"@found","kind":13},{"containerName":null,"line":129,"kind":13,"name":"@found"}]}